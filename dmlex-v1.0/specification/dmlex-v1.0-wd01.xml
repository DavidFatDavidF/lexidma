<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbook/docbookx.dtd" >
<article status="Working Draft 01" lang="en-US">
  <articleinfo>
    <title>Data Model for Lexicography (DMLex), Version 1.0</title>
    <releaseinfo role="cvs">$Id: spectools-docbook-template-wd03.xml,v 1.4 2010/07/08 12:28:15 admin
      Exp$</releaseinfo>
    <releaseinfo role="track">Standards Track Work Product</releaseinfo>
    <productname class="trade">dmlex-v1.0</productname>
    <productnumber>wd01</productnumber>
    <releaseinfo role="OASIS-specification-this-authoritative">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.html</releaseinfo>
    <releaseinfo role="OASIS-specification-this">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-this">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.xml</releaseinfo>
    <releaseinfo role="OASIS-specification-previous-authoritative">http://docs.oasis-open.org/lexidma/dmlex/v1.0/N/A/dmlex-v1.0-N/A.html</releaseinfo>
    <releaseinfo role="OASIS-specification-previous">http://docs.oasis-open.org/lexidma/dmlex/v1.0/N/A/dmlex-v1.0-N/A.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-previous">http://docs.oasis-open.org/lexidma/dmlex/v1.0/N/A/dmlex-v1.0-N/A.xml</releaseinfo>
    <releaseinfo role="OASIS-specification-latest-authoritative">http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.html</releaseinfo>
    <releaseinfo role="OASIS-specification-latest">http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-latest">http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.xml</releaseinfo>
    <releaseinfo role="committee"><ulink url="http://www.oasis-open.org/committees/lexidma/">OASIS Lexicographic Infrastructure Data Model and API (LEXIDMA) TC</ulink></releaseinfo>
    <authorgroup>
      <othercredit role="chair">
        <firstname>Tomaž</firstname>
        <surname>Erjavec</surname>
        <affiliation>
          <orgname><ulink url="http://www.ijs.si/">Jozef Stefan Institute</ulink></orgname>
          <address format="linespecific"><email>tomaz.erjavec@ijs.si</email></address>
        </affiliation>
        <email>tomaz.erjavec@ijs.si</email>
      </othercredit>
      <editor>
        <firstname>Michal</firstname>
        <surname>Měchura</surname>
        <affiliation>
          <orgname><ulink url="https://www.muni.cz/">Masaryk University</ulink></orgname>
          <address format="linespecific"><email>michmech@mail.muni.cz</email></address>
        </affiliation>
        <email>michmech@mail.muni.cz</email>
      </editor>
      <editor>
        <firstname>David</firstname>
        <surname>Filip</surname>
        <affiliation>
          <orgname><ulink url="http://www.adaptcentre.ie/">Trinity College Dublin
            (ADAPT)</ulink></orgname>
          <address format="linespecific"><email>david.filip@adaptcentre.ie</email></address>
        </affiliation>
        <email>david.filip@adaptcentre.ie</email>
      </editor>
      <editor>
        <firstname>Simon</firstname>
        <surname>Krek</surname>
        <affiliation>
          <orgname><ulink url="http://www.ijs.si/">Jozef Stefan Institute</ulink></orgname>
          <address format="linespecific"><email>simon.krek@ijs.si</email></address>
        </affiliation>
        <email>simon.krek@ijs.si</email>
      </editor>
    </authorgroup>
    <pubdate>21 October 2022</pubdate>
    <copyright>
      <year>2022</year>
      <holder>OASIS Open, Inc. All Rights Reserved.</holder>
    </copyright>
    <legalnotice role="additional">
      <title>Additional artifacts</title>
      <!--  probably will have references to UML diagrams
      <para>This prose specification is one component of a Work Product that also includes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para> Declarative validation artifacts accessible from <ulink url="&this-loc;/schemas/"
              >&this-loc;/schemas/</ulink>
          </para>



        </listitem>
      </itemizedlist> -->
      <para>NONE AT THE MOMENT</para>
    </legalnotice>
    <legalnotice role="related">
      <title>Related Work</title>
      <!--  Model content for replaced specifications in the future
   <para>This specification replaces or supersedes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para><emphasis>XLIFF Version &pversion;.</emphasis> Edited by Tom Comerford, David Filip, Rodolfo M. Raya, and Yves Savourel.
            05 August 2014. OASIS Standard. <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html">http://docs.oasis-open.org/xliff/xliff-core/v&pversion;/os/xliff-core-v&pversion;-os.html</ulink></para>
        </listitem>
      </itemizedlist>
       -->
      <para>This specification is related to:</para>
      <itemizedlist spacing="compact">
        <!--  model content for related specifications in case there are any later on
        <listitem>
          <para><emphasis>JLIFF Version &version;</emphasis>. Edited by Robert van Engelen and David
            Filip. &pubdate;. OASIS &standard;. <ulink url="&this-loc;/&name;-&stage;.html"
              >&this-loc;/&name;-&stage;.html</ulink>. Latest version: <ulink
              url="&latest-loc;/&name;.html">&latest-loc;/&name;.html</ulink>. </para>
        </listitem>

        <listitem>
          <para><emphasis>XLIFF Version 2.1.</emphasis> Edited by David Filip, Tom Comerford,
            Soroush Saadatfar, Felix Sasaki, and Yves Savourel. 13 February 2018. OASIS Standard.
              <ulink
              url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html"
              >http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html</ulink></para>
        </listitem>
         -->
        <listitem>
          <para><emphasis>No related specifications.</emphasis></para>
        </listitem>
      </itemizedlist>
    </legalnotice>
    <legalnotice id="namespaces" role="namespaces">
      <title>Declared namespaces</title>
      <para> This specification declares one or more namespaces. Namespace isn't considered an XML
        specific feature in this serialization independent specification.</para>
      <itemizedlist spacing="compact">
        <title>The core namespace</title>
        <listitem>
          <para><ulink url="http://docs.oasis-open.org/lexidma/ns/dmlex-1.0">http://docs.oasis-open.org/lexidma/ns/dmlex-1.0</ulink></para>
        </listitem>
      </itemizedlist>
    </legalnotice>
    <abstract>
      <para>This document defines the 1st version of a data model in support of the high-priority
        technical goals described in the LEXIDMA TC's charter, including:</para>
      <para>
        <itemizedlist>
          <listitem>
            <para>A serialization-independent Data Model for Lexicography (DMLex)</para>
          </listitem>
          <listitem>
            <para>An XML serialization of DMLex</para>
          </listitem>
          <listitem>
            <para>A JSON serialization of DMLex</para>
          </listitem>
          <listitem>
            <para>A relational database implementation of DMLex</para>
          </listitem>
        </itemizedlist>
      </para>
    </abstract>
    <legalnotice role="status">
      <title>Status</title>
      <!--       <para>{Describe the status and stability of the specification
      here.}</para> -->
      <para>This document was last revised or approved by the LEXIDMA TC on the above date. The
        level of approval is also listed above. Check the "Latest version" location noted above for
        possible later revisions of this document. Any other numbered Versions and other technical
        work produced by the Technical Committee (TC) are listed at <ulink url="https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=lexidma#technical">https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=lexidma#technical</ulink>.</para>
      <para>TC members should send comments on this document to the TC's email list. Others should
        send comments to the TC's public comment list, after subscribing to it by following the
        instructions at the "<ulink url="https://www.oasis-open.org/committees/comments/index.php?wg_abbrev=lexidma">Send A
          Comment</ulink>" button on the TC's web page at <ulink url="https://www.oasis-open.org/committees/lexidma/">https://www.oasis-open.org/committees/lexidma/</ulink>.</para>
      <para>This specification is provided under the <ulink url="https://www.oasis-open.org/policies-guidelines/ipr#Non-Assertion-Mode">Non-Assertion</ulink> Mode of the <ulink url="https://www.oasis-open.org/policies-guidelines/ipr">OASIS IPR Policy</ulink>, the
        mode chosen when the Technical Committee was established. For information on whether any
        patents have been disclosed that may be essential to implementing this specification, and
        any offers of patent licensing terms, please refer to the Intellectual Property Rights
        section of the TC's web page (<ulink url="https://www.oasis-open.org/committees/lexidma/ipr.php">https://www.oasis-open.org/committees/lexidma/ipr.php</ulink>).</para>
      <para>Note that any machine-readable content (<ulink url="https://www.oasis-open.org/policies-guidelines/tc-process#wpComponentsCompLang">Computer Language Definitions</ulink>) declared Normative for this Work Product is
        provided in separate plain text files. In the event of a discrepancy between any such plain
        text file and display content in the Work Product's prose narrative document(s), the content
        in the separate plain text file prevails.</para>
      <!-- 
      <para>The non-normative errata page for this specification is located at <ulink
          url="http://www.oasis-open.org/committees/lexidma/"
          >http://www.oasis-open.org/committees/lexidma/</ulink>.</para>
       -->
    </legalnotice>
    <legalnotice role="keywords">
      <title>Key words</title>
      <para>The key words <glossterm>must</glossterm>, <glossterm>must not</glossterm>,
          <glossterm>required</glossterm>, <glossterm>shall</glossterm>, <glossterm>shall
          not</glossterm>, <glossterm>should</glossterm>, <glossterm>should not</glossterm>,
          <glossterm>recommended</glossterm>, <glossterm>may</glossterm>, and
          <glossterm>optional</glossterm> in this document are to be interpreted as described in
          <ulink url="https://tools.ietf.org/html/bcp14">BCP 14</ulink> [<link linkend="rfc2119">RFC2119</link>] and [<link linkend="rfc8174">RFC8174</link>] if, and only if, they appear
        in all capitals, as shown here.</para>
    </legalnotice>
    <legalnotice role="citation">
      <title>Citation format</title>
      <para>When referencing this specification the following citation format should be used:</para>
      <para><citation>DMLex-1.0</citation></para>
      <para><emphasis>Data Model for Lexicography Version 1.0</emphasis>. Edited by Michal Měchura, David
        Filip and Simon Krek. 21 October 2022. OASIS Working Draft 01. <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.html">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.html</ulink>. Latest
        version: <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.html">http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.html</ulink>. </para>
      <!-- 
      <para>The non-normative errata page for this specification is located at <ulink
          url="http://www.oasis-open.org/committees/xliff/"
          >http://www.oasis-open.org/committees/xliff/</ulink>.</para>
       -->
    </legalnotice>
    <legalnotice role="notices">
      <title>Notices</title>
      <para>Copyright © OASIS<!-- ® --> Open 2022. All Rights Reserved.</para>
      <para>All capitalized terms in the following text have the meanings assigned to them in the
        OASIS Intellectual Property Rights Policy (the "OASIS IPR Policy"). The full <ulink url="https://www.oasis-open.org/policies-guidelines/ipr">Policy</ulink> may be found at
        the OASIS website.</para>
      <para>This document and translations of it may be copied and furnished to others, and
        derivative works that comment on or otherwise explain it or assist in its implementation may
        be prepared, copied, published, and distributed, in whole or in part, without restriction of
        any kind, provided that the above copyright notice and this section are included on all such
        copies and derivative works. However, this document itself may not be modified in any way,
        including by removing the copyright notice or references to OASIS, except as needed for the
        purpose of developing any document or deliverable produced by an OASIS Technical Committee
        (in which case the rules applicable to copyrights, as set forth in the OASIS IPR Policy,
        must be followed) or as required to translate it into languages other than English.</para>
      <para>The limited permissions granted above are perpetual and will not be revoked by OASIS or
        its successors or assigns.</para>
      <para>This document and the information contained herein is provided on an "AS IS" basis and
        OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY
        WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR
        ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</para>
      <para>OASIS requests that any OASIS Party or any other party that believes it has patent
        claims that would necessarily be infringed by implementations of this OASIS Committee
        Specification or OASIS Standard, to notify OASIS TC Administrator and provide an indication
        of its willingness to grant patent licenses to such patent claims in a manner consistent
        with the IPR Mode of the OASIS Technical Committee that produced this specification.</para>
      <para>OASIS invites any party to contact the OASIS TC Administrator if it is aware of a claim
        of ownership of any patent claims that would necessarily be infringed by implementations of
        this specification by a patent holder that is not willing to provide a license to such
        patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that
        produced this specification. OASIS may include such claims on its website, but disclaims any
        obligation to do so.</para>
      <para>OASIS takes no position regarding the validity or scope of any intellectual property or
        other rights that might be claimed to pertain to the implementation or use of the technology
        described in this document or the extent to which any license under such rights might or
        might not be available; neither does it represent that it has made any effort to identify
        any such rights. Information on OASIS' procedures with respect to rights in any document or
        deliverable produced by an OASIS Technical Committee can be found on the OASIS website.
        Copies of claims of rights made available for publication and any assurances of licenses to
        be made available, or the result of an attempt made to obtain a general license or
        permission for the use of such proprietary rights by implementers or users of this OASIS
        Committee Specification or OASIS Standard, can be obtained from the OASIS TC Administrator.
        OASIS makes no representation that any information or list of intellectual property rights
        will at any time be complete, or that any claims in such list are, in fact, Essential
        Claims.</para>
      <para>The name "OASIS" is a trademark of <ulink url="http://www.oasis-open.org">OASIS</ulink>,
        the owner and developer of this specification, and should be used only to refer to the
        organization and its official outputs. OASIS welcomes reference to, and implementation and
        use of, specifications, while reserving the right to enforce its marks against misleading
        uses. Please see <ulink url="https://www.oasis-open.org/policies-guidelines/trademark">https://www.oasis-open.org/policies-guidelines/trademark</ulink> for above
        guidance.</para>
    </legalnotice>
  </articleinfo>

  <section id="Introduction">
    <title>Introduction</title>
    <para>DMLex is a data model for modelling dictionaries (here called <emphasis>lexicographic resources</emphasis>) in computer applications such as dictionary writing systems.</para>
    <para>DMLex is a data model, not an encoding format. DMLex is abstract, independent of any markup language or formalism. At the same time, DMLex has been designed to be easily and straightforwardly implementable in XML, JSON, as a relational database, and as a Semantic Web triplestore.</para>
    <section>
      <title>Modular structure of DMLex</title>
      <para>The DMLex specification is divided into a core with several optional modules.</para>
      <itemizedlist>
        <listitem>
          <para>
            <link linkend="core">DMLex Core</link> allows you to model the basic entries-and-sense structure if a monolingual lexicographic resource.</para>
        </listitem>
        <listitem>
          <para>
            <link linkend="xlingual">DMLex Crosslingual Module</link> extends DMLex Core to model bilingual and multilingual lexicographic resources.</para>
        </listitem>
        <listitem>
          <para>
            <link linkend="linking">DMLex Linking Module</link> extends DMLex Core and allows you to model various kinds of relations between entries, senses and other objects, including semantic relations such as synonymy and antonymy and presentational relations such as subentries and subsenses, both within a single lexicographic resource and across multiple lexicographic resources.</para>
        </listitem>
        <listitem>
          <para>
            <link linkend="inline">DMLex Inline Markup Module</link> extends DMLex Core to allow the modelling of inline markup on various objects such as example sentences, including the modelling of collocations and corpus patterns.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Schema formalism</title>
      <para>DMLex models a lexicographic resource as a <emphasis role="strong">hierarchical list of objects</emphasis>. Each object has a name, a value and an optional list of child objects, each of which can in turn also have a <emphasis role="strong">name</emphasis>, a <emphasis role="strong">value</emphasis> and an optional list of child objects.</para>
      <para>The data model is defined in this standard through the means of a formalism which defines, for each object: (1) what its name is, (2) what its value is supposed to be (from a list of predefined primitive types) and (3) which child objects it may contain, with what arities.</para>
      <para>The arities of child objects are indicated with the following codes:</para>
      <itemizedlist>
        <listitem>
          <para>
            <code>(0..1)</code> zero or one</para>
        </listitem>
        <listitem>
          <para>
            <code>(0..n)</code> zero or one or more</para>
        </listitem>
        <listitem>
          <para>
            <code>(1..1)</code> exactly one</para>
        </listitem>
        <listitem>
          <para>
            <code>(1..n)</code> one or more</para>
        </listitem>
        <listitem>
          <para>
            <code>(2..n)</code> two or more</para>
        </listitem>
      </itemizedlist>
      <para>The primitive types of the values of objects are given with the following codes:</para>
      <itemizedlist>
        <listitem>
          <para>
            <code>&lt;string&gt;</code> a non-empty string</para>
        </listitem>
        <listitem>
          <para>
            <code>&lt;stringOrEmpty&gt;</code> a string which may be empty</para>
        </listitem>
        <listitem>
          <para>
            <code>&lt;number&gt;</code> a positive integer number</para>
        </listitem>
        <listitem>
          <para>
            <code>&lt;id&gt;</code> an alphanumeric identifier</para>
        </listitem>
        <listitem>
          <para>
            <code>&lt;idref&gt;</code> a reference to something through its alphanumeric identifier</para>
        </listitem>
        <listitem>
          <para>
            <code>&lt;uri&gt;</code> a URI</para>
        </listitem>
        <listitem>
          <para>
            <code>&lt;langCode&gt;</code> an IETF language code</para>
        </listitem>
        <listitem>
          <para>
            <code>&lt;empty&gt;</code> nothing: the object serves only as a container for child objects</para>
        </listitem>
        <listitem>
          <para>
            <code>&lt;symbol&gt;</code> one of a specified finite number of values</para>
        </listitem>
      </itemizedlist>
      <para>When the primitive type of a child object is absent, this means that the schema for objects of that name is defined elsewhere in the code.</para>
    </section>
    <section>
      <title>Implementing DMLex</title>
      <para>
        DMLex is an abstract data model which can be implemented in many different programming environments and serialization languages.
        In this document, we give recommended implementations
        in <link linkend="XML_implementation">XML</link>,
        in <link linkend="JSON_implementation">JSON</link>
        and as a <link linkend="RDB_implementation">relational database</link>.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            The XML and JSON implementations are intended as serializations for <emphasis>data exchange</emphasis>:
            for encoding lexicographic data while the data is in transit out of one software system into another.
            Examples of what the two serializations look like with real-world data are given in <xref linkend="examples"/>.
          </para>
        </listitem>
        <listitem>
          <para>
            The relational database implementation is intended as a representation for lexicographic data
            while the data is being edited and maintained inside a software system, such as Dictionary Writing System (DWS).
          </para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  
  <!-- Conformance section should go last, but it seems to make better sense here  -->
  <section id="Conformance">
    <title>Conformance</title>
   
   <orderedlist inheritnum="ignore" continuation="restarts">
       <listitem id="DocumentConformance">
           <orderedlist inheritnum="ignore" continuation="restarts">
               <title> DMLex Instances Conformance</title>
               <listitem>
    <para>Conformant <firstterm>DMLex Instances</firstterm>
                        <glossterm>must</glossterm> be well formed and valid instances according to
                        one of DMLex Serialization Specifications.</para>
               </listitem>
               <listitem>
    
                   <para>Another Instance conformance clause.</para>
               </listitem>
               <listitem>
    
    <para> ...</para>
               </listitem>
               <listitem>
                <para><firstterm>DMLex Instances</firstterm>
                        <glossterm>may</glossterm> contain custom extensions, as defined in the
                            <link linkend="extensions">Extension Mechanisms</link> section. Extensions
                            <glossterm>must</glossterm> be serialized in a way conformant with the
                        pertaining DMLex Serialization Specifications. </para>
               </listitem> 
           </orderedlist>
       </listitem>
       <listitem id="ApplicationConformance">
               <orderedlist inheritnum="ignore" continuation="restarts">
                   <title>
                       Application Conformance</title>
                <listitem>                
    <para>DMLex <firstterm>Writers</firstterm>
                        <glossterm>must</glossterm> create conformant <firstterm>DMLex
                            Instances</firstterm> to be considered DMLex compliant.</para>
                </listitem>
                <listitem>
                           <para>
                        <firstterm>Agents</firstterm> processing conformant <firstterm>DMLex
                            Instances</firstterm> that contain custom extensions are not
                            <glossterm>required</glossterm> to understand and process non-DMLex
                        objects or attributes. However, conformant applications
                            <glossterm>should</glossterm> preserve existing custom extensions when
                        processing conformant <firstterm>DMLex Instances</firstterm>, provided that
                        the objects that contain custom extensions are not removed according to
                        DMLex Processing Requirements or the extension's own processing
                        requirements.</para>
                </listitem>
                    <listitem>
                        <para>All <firstterm>Agents</firstterm>
                        <glossterm>must</glossterm> comply with Processing Requirements for
                        otherwise unspecified <firstterm>Agents</firstterm> or without a
                        specifically set target <firstterm>Agent</firstterm>.</para> 
                    </listitem>
                                      
                   <listitem>
                       <para> Specialized <firstterm>Agents</firstterm> defined in this
                        specification - this is <firstterm>Writer</firstterm>,
                            <firstterm>Modifier</firstterm>, and <firstterm>Enricher</firstterm>
                        <firstterm>Agents</firstterm> - <glossterm>must</glossterm> comply with the
                        Processing Requirements targeting their specifically defined type of
                            <firstterm>Agent</firstterm> on top of Processing Requirements targeting
                        all <firstterm>Agents</firstterm> as per point c. above.</para>
                   </listitem>
                   <listitem>
                    <para>DMLex is an object model explicitly designed for exchanging data among
                        various <firstterm>Agents</firstterm>. Thus, a conformant DMLex application
                            <glossterm>must</glossterm> be able to accept <firstterm>DMLex
                            Instances</firstterm>
                        <firstterm>Created</firstterm>,  <firstterm>Modified</firstterm>, or
                            <firstterm>Enriched</firstterm> by a different application, provided
                        that:</para>
                        <orderedlist inheritnum="ignore" continuation="restarts">
                        <listitem>
                            <para>The processed files are conformant <firstterm>DMLex
                                    Instances</firstterm> according to the same DMLex Serialization
                                Specification,</para>
                        </listitem>
                            <listitem>
                                <para>in a state compliant with all relevant Processing Requirements.</para>
                            </listitem>  
                        </orderedlist>
                            
                </listitem>
            
                   
   </orderedlist>
       </listitem>
       <listitem>
                       <orderedlist inheritnum="ignore" continuation="restarts">
                           <title>
                               Backwards Compatibility</title>
                           <listitem>
                    <para> N/A. </para>
                </listitem>
                       </orderedlist>
                   </listitem>
   </orderedlist>
    
    <note><para><firstterm>DMLex Instances</firstterm> cannot be conformant to this specification w/o being
            conformant to a specific serialization. </para></note>
</section>
  
  <!--  core and modules  -->
  <section id="core">
  <title>DMLex Core</title>
  <para>The DMLex Core provides data types for modelling monolingual dictionaries (called <emphasis>lexicographic resources</emphasis> in DMLex) where headwords, definitions and examples are all in one and the same language. DMLex Core gives you the tools you need to model simple dictionary entries which consist of headwords, part-of-speech labels, senses, definitions and so on.</para>
  <section id="core_lexicographicResource">
  <title>
    <code>lexicographicResource</code>
  </title>
  <para>Represents a dictionary. A lexicographic resource is a dataset which can be used, viewed and
    read by humans as a dictionary and – simultaneously – ingested, processed and understood by
    software agents as a machine-readable database. Note that the correct name of this data type in
    DMLex is <emphasis>lexicographic</emphasis>, not <emphasis>lexical</emphasis>, resource.</para>

  <bridgehead>Contents</bridgehead>
  <itemizedlist>
    <listitem>
      <para><literal moreinfo="none">id (1..1) &lt;id&gt;</literal> An identifier of the lexicographic resource,
        unique among all lexicographic resources in the implementation. If the implementation
        contains only one lexicographic resource then <literal moreinfo="none">id</literal>
        <glossterm>may</glossterm> be understood as implicit and <glossterm>may</glossterm> be left
        unimplemented.</para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none">title: (0..1) &lt;string&gt;</literal> A human-readable title of the
        lexicographic resource.</para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none">uri: (0..1) &lt;uri&gt;</literal> The URI of the lexicographic resource,
        identifying it on the Web.</para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none">language: (1..1) &lt;langCode&gt;</literal> The language that this lexicographic
        resource describes.</para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none"><link linkend="core_entry">entry</link>: (0..n)</literal></para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none"><link linkend="core_tag">tag</link>: (0..n)</literal></para>
    </listitem>
  </itemizedlist>

  <bridgehead>Comments</bridgehead>
  <itemizedlist>
    <listitem>
      <para>
        <code>language</code> identifies the language of headwords, definitions and examples in
        this dictionary. DMLex is based on the assumption that all headwords in a lexicographic
        resource are in the same language, and that definitions and examples, if any occur in the
        lexicographic resource, are in that language too. The <code>language</code> child object
        of <code>lexicographicResource</code> informs potential users of the lexicographic
        resource which language that is.</para>
    </listitem>
    <listitem>
      <para>The main role of a lexicographic resource is to contain entries (<code>entry</code>
        objects). The other object type that can optionally occur inside a
        <code>lexicographicResource</code>, <code>tag</code>, is for lists of
        look-up values such as part-of-speech labels.</para>
    </listitem>
  </itemizedlist>
  
  <example>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;lexicographicResource id="..." uri="..." language="..."&gt;
    &lt;title&gt;...&lt;/title&gt;
    &lt;entry.../&gt;
    &lt;tag.../&gt;
&lt;/lexicographicResource&gt;
    </programlisting>
  </example>
  
  <example>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "id": "...",
    "title": "...",
    "language": "...",
    "entries": [...],
    "tags": [...]
}
    </programlisting>
  </example>
  
  <example>
    <title>SQL</title>
    <programlisting format="linespecific">
create table lexicographicResources (
    id int primary key,
    title varchar(255),
    uri varchar(255),
    language varchar(10)
)
    </programlisting>
  </example>

</section>
  <section id="core_entry">
  <title>
    <code>entry</code>
  </title>
  <para>Represents a dictionary entry. An entry contains information about one headword.</para>

  <bridgehead>Contents</bridgehead>
  <itemizedlist>
    <listitem>
      <para><literal moreinfo="none">id (1..1) &lt;id&gt;</literal> An identifier of the entry, unique among all
        lexicographic resources in the implementation.</para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none">headword: (1..1) &lt;string&gt;</literal> The entry's headword.</para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none">homographNumber: (0..1) &lt;number&gt;</literal> The entry's homograph number,
        as a guide for humans to distinguish entries with the same headword.</para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none"><link linkend="core_partOfSpeech">partOfSpeech</link>:
        (0..n)</literal></para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none"><link linkend="core_label">label</link>: (0..n)</literal></para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none"><link linkend="core_pronunciation">pronunciation</link>:
        (0..n)</literal></para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none"><link linkend="core_inflectedForm">inflectedForm</link>:
        (0..n)</literal></para>
    </listitem>
    <listitem>
      <para><literal moreinfo="none"><link linkend="core_sense">sense</link>: (0..n)</literal></para>
    </listitem>
  </itemizedlist>

  <bridgehead>Comments</bridgehead>
  <itemizedlist>
    <listitem>
      <para> The headword can be a single word, a multi-word expression, or any expression in the
        source language which is being described by the entry.</para>
    </listitem>
    <listitem>
      <para>Entries in DMLex do not have an explicit listing order. An application can imply a
        listing order from a combination of the headword and the homograph number.</para>
    </listitem>
    <listitem>
      <para>DMLex Core does not have a concept of "subentry". To model subentries (ie. entries
        inside entries) in a lexicographic resource, you <glossterm>must</glossterm> use object types
        from the <link linkend="linking">Linking Module</link> for that.</para>
    </listitem>
  </itemizedlist>

  <example>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;entry id="..." homographNumber="..."&gt;
    &lt;headword&gt;...&lt;/headword&gt;
    &lt;partOfSpeech.../&gt;
    &lt;label.../&gt;
    &lt;pronunciation.../&gt;
    &lt;inflectedForm.../&gt;
    &lt;sense.../&gt;
&lt;/entry&gt;
  </programlisting>
  </example>

  <example>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "id": "...",
    "headword": "...",
    "homographNumber": "...",
    "partsOfSpeech": [...],
    "labels": [...],
    "pronunciations": [...],
    "inflectedForms": [...],
    "senses": [...]
}
  </programlisting>
  </example>

  <example>
    <title>SQL</title>
    <programlisting format="linespecific">
create table entries (
    lexicographicResourceID int foreign key references lexicographicResource(id),
    id int primary key,
    headword varchar(255),
    homographNumber int
)
    </programlisting>
  </example>

</section>
  <section id="core_partOfSpeech">

  <title>
    <code>partOfSpeech</code>
  </title>
  <para>Represents a part-of-speech label.</para>
  <programlisting format="linespecific">
partOfSpeech: &lt;string&gt;
    listingOrder: (1..1) &lt;number&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;partOfSpeech value="..."/&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
"..."
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table partsOfSpeech (
    entryID int foreign key references entries(id),
    value varchar(10),
    listingOrder int,
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>
          <code>partOfSpeech</code> is an abbreviation, a code or some other string of text which identifies the part-of-speech label, for example <code>n</code> for noun,  <code>v</code> for verb, <code>adj</code> for adjective. You can use the <code>tag</code> datatype to explain the meaning of the part-of-speech tags, to constrain which part-of-speech tags are allowed to occur in your lexicographic resource, and to map them onto external inventories and ontologies.</para>
      </listitem>
      <listitem>
        <para>If you want to model other grammatical properties of the headword besides part of speech, such as gender (of nouns) or aspect (of verbs), the way to do that in DMLex is to conflate them to the part-of-speech label, for example <code>noun-masc</code> and <code>noun-fem</code>, or <code>v-perf</code> and <code>v-imperf</code>.</para>
      </listitem>
      <listitem>
        <para>
          <code>listingOrder</code> is the position of this part-of-speech label among other part-of-speech labels of the same entry. This can be implicit from the serialization.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section id="core_sense">

  <title>
    <code>sense</code>
  </title>
  <para>Represents one of possibly many meanings (or meaning potentials) of the headword.</para>
  <programlisting format="linespecific">
sense: &lt;id&gt;
    listingOrder: (1..1) &lt;number&gt;
    indicator: (0..1) &lt;string&gt;
    label: (0..n)
    definition: (0..n)
    example: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;sense id="..."&gt;
    &lt;indicator&gt;...&lt;/indicator&gt;
    &lt;label.../&gt;
    &lt;definition.../&gt;
    &lt;example.../&gt;
&lt;/sense&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "id": "...",
    "indicator": "...",
    "labels": [...],
    "definitions": [...],
    "examples": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table senses (
    entryID int foreign key references entries(id),
    id int primary key,
    indicator nvarchar(50),
    listingOrder int
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>
          <code>listingOrder</code> represents the position of this sense among other senses of the same entry. Can be implicit from the serialization.</para>
      </listitem>
      <listitem>
        <para>
          <code>indicator</code> is a short statement, in the same language as the headword, that gives an indication of the meaning of a sense and permits its differentiation from other senses in the entry. Indicators are sometimes used in dictionaries instead of or in addition to definitions.</para>
      </listitem>
      <listitem>
        <para>
          <code>definition</code> is a statement, in the same language as the headword, that describes and/or explains the meaning of a sense. In DMLex, the term definition encompasses not only formal definitions, but also less formal explanations.</para>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Note</title>
    <para>An <emphasis role="strong">entry</emphasis> is a container for formal properties of the headword such as orthography, morphology, syntax and pronunciation. A <emphasis role="strong">sense</emphasis> is a container for statements about the headword's semantics. DMLex deliberately makes it impossible to include morphological information at sense level. If you have an entry where each sense has slightly different morphological properties (eg. a noun has a weak plural in one sense and a strong plural in another) then, in DMLex, you need to treat it as two entries (homographs), and you can use the Linking Module two link the two entries together and to make sure they are always shown together to human users.</para>
  </section>
  

</section>
  <section id="core_definition">

  <title>
    <code>definition</code>
  </title>
  <para>Represents one of possibly several definitions of a sense.</para>
  <programlisting format="linespecific">
definition: &lt;string&gt;
    definitionType: (0..1) &lt;string&gt;
    listingOrder: (1..1) &lt;number&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;definition definitionType="..."&gt;...&lt;/definition&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "text": "....",
    "definitionType": "..."
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table definitions (
    senseID int foreign key references sense(id),
    text nvarchar(255),
    definitionType nvarchar(10),
    listingOrder int,
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>If you have multiple definitions inside a single sense, you can use <code>definitionType</code> to indicate the difference between them, for example that they are intended for different audiences. Optionally, you can use the <code>tag</code> data type to constrain and/or explain the definition types that occur in your lexicographic resource.</para>
      </listitem>
      <listitem>
        <para>
          <code>listingOrder</code> is the position of this definition among other definitions of the same sense. This can be implicit from the serialization.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section id="core_inflectedForm">

  <title>
    <code>inflectedForm</code>
  </title>
  <para>Represents one (of possibly many) inflected forms of the headword. Example: <xref linkend="ex01"/>.</para>
  <programlisting format="linespecific">
inflectedForm: &lt;string&gt;
    inflectedTag: (0..1) &lt;string&gt;
    listingOrder: (1..1) &lt;number&gt;
    label: (0..n)
    pronunciation: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;inflectedForm inflectedTag="..."&gt;
    &lt;text&gt;...&lt;/text&gt;
    &lt;label.../&gt;
    &lt;pronunciation.../&gt;
&lt;/inflectedTag&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "inflectedTag": "...",
    "text": "...",
    "labels": [...],
    "pronunciations": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table inflectedForms (
    entryID int foreign key references entries(id),
    inflectedTag varchar(10),
    text varchar(255),
    listingOrder int,
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>
          <code>inflectedTag</code> is an abbreviation, a code or some other string of text which identifies the inflected form, for example <code>pl</code> for plural,  <code>gs</code> for genitive singular, <code>com</code> for comparative. You can use the <code>tag</code> datatype to explain the meaning of the inflection tags, to constrain which inflection tags are allowed to occur in your lexicographic resource, and to map them onto external inventories and ontologies.</para>
      </listitem>
      <listitem>
        <para>The value of the <code>inflectedForm</code> object is the text of the inflected word itself.</para>
      </listitem>
      <listitem>
        <para>
          <code>listingOrder</code> is the position of this inflected form among other inflected forms of the same entry. This can be implicit from the serialization.</para>
      </listitem>
      <listitem>
        <para>The <code>inflectedForm</code> object is intended to model the <emphasis role="strong">inflectional morphology</emphasis> of a headword. To model derivational morphology, for example feminine forms of maculine nouns, the recommended way to do that in DMLex is to create separate entries for the two words, and link them using the Linking Module.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section id="core_label">

  <title>
    <code>label</code>
  </title>
  <para>Represents a restriction on its parent such as temporal (old-fashioned, neologism), regional (dialect), register (formal, colloquial), domain (medicine, politics) or grammar (singular-only).</para>
  <programlisting format="linespecific">
label: &lt;string&gt;
    listingOrder: (1..1) &lt;number&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;label value="..."/&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
"..."
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table labels (
    entryID int foreign key references entries(id),
    senseID int foreign key references senses(id),
    inflectedFormID int foreign key references inflectedForms(id),
    pronunciationID int foreign key references pronunciations(id),
    exampleID int foreign key references examples(id),
    value varchar(10),
    listingOrder int,
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>The value of the label object is an abbreviation, a code or some other string of text which identifies the label, for example <code>neo</code> for neologism,  <code>colloq</code> for colloquial, <code>polit</code> for politics. You can use the <code>tag</code> datatype to explain the meaning of the label tags, to constrain which label tags are allowed to occur in your lexicographic resource, and to map them onto external inventories and ontologies.</para>
      </listitem>
      <listitem>
        <para>
          <code>listingOrder</code> is the position of this label among other labels of the same entry. This can be implicit from the serialization.</para>
      </listitem>
      <listitem>
        <para>A label applies to the object that it is a child of. When the label is a child of <code>entry</code>, then it applies to the headword in all its senses. When the label is a child of <code>sense</code>, then it applies to the headword in that sense only (<emphasis role="strong">not</emphasis> including any subsenses linked to it using the Linking Module). When the label is a child of <code>inlectedForm</code>, then it applies only to that inflected form of the headword (in all senses). When the label is a child of <code>pronunciation</code>, then it applies only to that pronuciation of the headword (in all senses).</para>
      </listitem>
    </itemizedlist>
  </section>

</section>
  <section id="core_pronunciation">

  <title>
    <code>pronunciation</code>
  </title>
  <para>Represents the pronunciation of its parent. Examples: <xref linkend="ex02"/>, <xref linkend="ex03"/>, <xref linkend="ex04"/>.</para>
  <programlisting format="linespecific">
pronunciation: &lt;empty&gt;
    soundFile: (0..1) &lt;uri&gt;
    transcription: (0..n)
    listingOrder: (1..1) &lt;number&gt;
    label: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;pronunciation soundFile="..."&gt;
    &lt;transcription.../&gt;
    &lt;label.../&gt;
&lt;/pronunciation&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "soundFile": "...",
    "transcriptions": [...],
    "labels": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table pronunciations (
    entryID int foreign key references entries(id),
    soundFile varchar(255),
    listingOrder int,
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>
          <code>transcription</code> is the  transcription of the pronuciation in some notation, such as IPA. If more than transcription is present in a single pronuncuation object, then they must be different transcriptions (in different schemes) of the same pronunciation, eg. one in IPA and one in SAMPA.</para>
      </listitem>
      <listitem>
        <para>
          <code>soundFile</code> is a pointer to a file containing a sound recording of the pronunciation.</para>
      </listitem>
      <listitem>
        <para>
          <code>listingOrder</code> is the position of this <code>pronunciation</code> object among other <code>pronunciation</code> objects of the same parent. This can be implicit from the serialization.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section id="core_transcription">

  <title>
    <code>transcription</code>
  </title>
  <para>Represents the transcription of a pronunciation in some notation such as IPA.</para>
  <programlisting format="linespecific">
transcription: &lt;string&gt;
    scheme: (0..1) &lt;langCode&gt;
    listingOrder: (1..1) &lt;number&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;transcription scheme="..."&gt;...&lt;/transcription&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "text": "...",
    "scheme": "..."
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table transcriptions (
    pronunciationID int foreign key references pronunciation(id),
    text varchar(255),
    scheme varchar(10),
    listingOrder int,
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>
          <code>scheme</code> object identifies the transcription scheme used here. Example: <code>en-fonipa</code> for English IPA. This can be implicit if the lexicographic resource uses only one transcription scheme throughout.</para>
      </listitem>
      <listitem>
        <para>
          <code>listingOrder</code> is the position of this <code>transcription</code> object among other <code>transcription</code> objects of the same pronunciation. This can be implicit from the serialization.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section id="core_example">

  <title>
    <code>example</code>
  </title>
  <para>Represents a sentence or other text fragment which illustrates the headword being used.</para>
  <programlisting format="linespecific">
example: &lt;string&gt;
    sourceIdentity: (0..1) &lt;string&gt;
    sourceElaboration: (0..1) &lt;string&gt;
    label: (0..n)
    soundFile: (0..1) &lt;uri&gt;
    listingOrder: (1..1) &lt;number&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;example sourceIdentity="..." sourceElaboration="..." soundFile="..."&gt;
    &lt;text&gt;...&lt;/text&gt;
    &lt;label.../&gt;
&lt;/example&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "text": "...",
    "sourceIdentity": "...",
    "sourceElaboration": "...",
    "labels": [...],
    "soundFile": "..."
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table examples (
    senseID int foreign key references senses(id),
    text varchar(255),
    sourceIdentity varchar(50),
    sourceElaboration varchar(255),
    soundFile varchar(255),
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>
          <code>sourceIdentity</code> is an abbreviation, a code or some other string of text which identifies the source. You can use the <code>tag</code> datatype to explain the meaning of the source identifiers and to constrain which source identifiers are allowed to occur in your lexicographic resource.</para>
      </listitem>
      <listitem>
        <para>
          <code>sourceElaboration</code> is a free-form statement about the source of the example. If <code>source</code> is present, then <code>sourceElaboration</code> can be used for information where in the source the example can be found: page number, chapter and so on. If <code>sourceIdentity</code> is absent then <code>sourceElaboration</code> can be used to fully name the source.</para>
      </listitem>
      <listitem>
        <para>
          <code>soundFile</code> is a pointer to a file containing a sound recording of the example.</para>
      </listitem>
      <listitem>
        <para>
          <code>listingOrder</code> is the position of this example among other examples in the same sense. This can be implicit from the serialization.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section id="core_tag">

  <title>
    <code>tag</code>
  </title>
  <para>Represents one (of many) possible values for <code>partOfSpeech</code>, <code>inflectedTag</code>, <code>label</code>, and <code>source</code>. Example: <xref linkend="ex05"/>.</para>
  <programlisting format="linespecific">
tag: &lt;string&gt;
    description: (0..1) &lt;string&gt;
    target: (0..n) &lt;symbol&gt;
    partOfSpeechConstraint: (0..n) &lt;string&gt;
    sameAs: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;tag value="..."&gt;
    &lt;description&gt;...&lt;/description&gt;
    &lt;target value="..."/&gt;
    &lt;partOfSpeechConstraint value="..."/&gt;
    &lt;sameAs.../&gt;
&lt;/tag&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "value": "...",
    "description": "...",
    "targets": ["..."],
    "partOfSpeechConstraints": ["..."],
    "sameAs": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table tags (
    lexicographicResourceID int foreign key references lexicographicResource(id),
    value varchar(10),
    description varchar(255),
    targets varchar(255), --comma-separated list
    partOfSpeechConstraints varchar(255), --comma-separated list
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>The value is an abbreviation, a code or some other string of text which identifies the source. If you want, you can design your implementation to enforce referential integrity between <code>tag</code> values on the one hand and  <code>partOfSpeech</code>, <code>inflectedTag</code> etc. objects on the other hand. In other words, you can make it so that the tags you define in <code>tag</code> objects are the only values allowed for <code>partOfSpeech</code>, <code>inflectedTag</code> etc. However, doing this is optional in DMLex. An implementation of DMLex is compliant regardless of whether it enforces referential integrity on <code>tag</code> values.</para>
      </listitem>
      <listitem>
        <para>
          <code>description</code> is a human-readable description of what the tag means.</para>
      </listitem>
      <listitem>
        <para>
          <code>target</code> tells us where exactly the tag is expected to be used. If omitted, then all four. The possible values are:</para>
        <itemizedlist>
          <listitem>
            <para>
              <code>partOfSpeech</code>: as the value of a <code>partOfSpeech</code> object</para>
          </listitem>
          <listitem>
            <para>
              <code>inflectedTag</code>: as the value of an <code>inflectedTag</code> object</para>
          </listitem>
          <listitem>
            <para>
              <code>sourceIdentity</code>: as the value of a <code>sourceIdentity</code> object</para>
          </listitem>
          <listitem>
            <para>
              <code>label</code>: as the value of a <code>label</code> object</para>
          </listitem>
          <listitem>
            <para>
              <code>definitionType</code>: as the value of a <code>definitionType</code> object</para>
          </listitem>
          <listitem>
            <para>
              <code>collocateRole</code>: as the value of a <code>collocateRole</code> object</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>
          <code>partOfSpeechConstraint</code>, if present, says that this tag is only intended to be used inside entries that are labelled with this part of speech. You can us this to constrain that, for example, only nouns and adjectives can have plurals but other parts of speech cannot.</para>
      </listitem>
      <listitem>
        <para>
          <code>target</code> and <code>partOfSpeechConstraint</code> allow you to specify constraints on which tags are expected to appear where throughout the lexicographic resource. Enforcing these constraints in your implementation is optional.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section id="core_sameAs">

  <title>
    <code>sameAs</code>
  </title>
  <para>Represents the fact that the parent object is equivalent to an item available from an external authority. Example: <xref linkend="x06"/>.</para>
  <programlisting format="linespecific">
sameAs: &lt;uri&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;sameAs uri="..."/&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
"..."
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table sameAs (
    tagID int foreign key references tags(id),
    uri varchar(255),
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>The value is the URI of an item in an external inventory.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
</section>
  <section id="xlingual">
  <title>DMLex Crosslingual Module</title>
  <para>DMLex's Multilingual Module extends the Core and turns a monolingual lexicographic resource into a bilingual or multilingual one. A bilingual or multilingual lexicographic resource is a lexicographic resource with multiple (two or more) languages: the headwords and the examples are in one language (called the <emphasis>headword language</emphasis> in DMLex) and their translations are in one or more other languages (called the <emphasis>translation languages</emphasis> in DMLex).</para>
  <section>

  <title>Extensions to <code>lexicographicResource</code>
  </title>
  <para>Additional children:</para>
  <programlisting format="linespecific">
lexicographicResource: ...
    translationLanguage: (1...n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;lexicographicResource ...&gt;
    ...
    &lt;translationLanguage.../&gt;
&lt;/lexicographicResource&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    ...,
    "translationLanguages": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <para>No changes needed.</para>
  </section>
 

</section>
  <section>

  <title>
    <code>translationLanguage</code>
  </title>
  <para>Represents one of the languages in which translations are given in this lexicographic resource. Examples: <xref linkend="ex07"/>, <xref linkend="ex10"/>.</para>
  <programlisting format="linespecific">
translationLanguage: &lt;langCode&gt;
    listingOrder: (1..1) &lt;number&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;translationLanguage langCode=""/&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
"..."
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table translationLanguage (
    lexicographicResourceID int foreign key references lexicographicResources(id),
    langCode varchar(10) primary key,
    listingOrder int,
)
</programlisting>
    <para>Comments</para>
    <itemizedlist>
      <listitem>
        <para>
          <code>listingOrder</code> sets the order in which translations (of headwords and examples) should be shown. It outranks the listing order given in <code>headwordTranslation</code>, <code>headwordExplanation</code> and <code>exampleTranslation</code> objects.</para>
      </listitem>
    </itemizedlist>
  </section>
  

</section>
  <section>

  <title>Extensions to <code>sense</code>
  </title>
  <para>Additional children:</para>
  <programlisting format="linespecific">
sense: ...
    headwordExplanation: (0..n)
    headwordTranslation: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;sense ...&gt;
    ...
    &lt;headwordExplanation.../&gt;
    &lt;headwordTranslation.../&gt;
    ...
&lt;/sense&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    ...
    "headwordExplanations": [...],
    "headwordTranslations": [...],
    ...
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <para>No changes needed.</para>
  </section>
  
</section>
  <section>

  <title>
    <code>headwordTranslation</code>
  </title>
    <para>Represents one of possibly multiple translations of a headword. Examples: <xref linkend="ex08"/>, <xref linkend="ex11"/>.</para>
  <programlisting format="linespecific">
headwordTranslation: &lt;string&gt;
    language: (0..1) &lt;langCode&gt;
    listingOrder: (1..1) &lt;number&gt;
    partOfSpeech: (0..n) &lt;string&gt;
    label: (0..n)
    pronunciation: (0..n)
    inflectedForm: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;headwordTranslation language="..."&gt;
    &lt;text&gt;...&lt;/text&gt;
    &lt;partOfSpeech.../&gt;
    &lt;label.../&gt;
    &lt;pronunciation.../&gt;
    &lt;inflectedForm.../&gt;
&lt;/headwordTranslation&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "language": "...",
    "text": "...",
    "partsOfSpeech": [...],
    "labels": [...],
    "pronunciations": [...],
    "inflectedForms": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table headwordTranslations (
    senseID int foreign key references senses(id),
    language nvarchar(10) foreign key references translationLanguage(langCode),
    text nvarchar(255),
    listingOrder int,
    id int primary key
);
alter table partsOfSpeech (
    add headwordTranslationID int foreign key references headwordTranslations(id)
);
alter table labels (
    add headwordTranslationID int foreign key references headwordTranslations(id)
);
alter table pronunciations (
    add headwordTranslationID int foreign key references headwordTranslations(id)
);
alter table inflectedForms (
    add headwordTranslationID int foreign key references headwordTranslations(id)
)
</programlisting>
    <para>Comments</para>
    <itemizedlist>
      <listitem>
        <para>
          <code>language</code> indicates the language of this translation. You can use the <code>translationLanguage</code> datatype to explain the meaning of the language codes that appear here and/or to constrain which language codes are allowed.</para>
      </listitem>
      <listitem>
        <para>If ony one translation language exists in your lexicographic resource, then <code>language</code> can be left out.</para>
      </listitem>
      <listitem>
        <para>For more comments see comments under <code>headwordTranslation</code> in the Bilingual Module.</para>
      </listitem>
    </itemizedlist>
  </section>

</section>
  <section>

    <title>
        <code>headwordExplanation</code>
    </title>
    <para>Represents a statement in the target language which explains (but does not translate) the meaning of the headword. Example: <xref linkend="ex09"/>.</para>
    <programlisting format="linespecific">
headwordExplanation: &lt;string&gt;
    language: (1..1) &lt;langCode&gt;
</programlisting>
    <section>
        <title>XML</title>
        <programlisting format="linespecific">
&lt;headwordExplanation language="..."&gt;...&lt;/headwordExplanation&gt;
</programlisting>
    </section>
    <section>
        <title>JSON</title>
        <programlisting format="linespecific">
{
    "language": "...",
    "text": "...",
}
</programlisting>
    </section>
    <section>
        <title>SQL</title>
        <programlisting format="linespecific">
create table headwordExplanations (
    senseID int foreign key references senses(id),
    language nvarchar(10) foreign key references translationLanguage(langCode),
    text nvarchar(255),
    id int primary key
)
</programlisting>
        <para>Comments</para>
        <itemizedlist>
            <listitem>
                <para>
                    <code>language</code> indicates the language of this explanation. You can use the <code>translationLanguage</code> datatype to explain the meaning of the language codes that appear here and/or to constrain which language codes are allowed.</para>
            </listitem>
            <listitem>
                <para>If ony one translation language exists in your lexicographic resource, then <code>language</code> can be left out.</para>
            </listitem>
            <listitem>
                <para>It is assume that there will always be a maximum of one <code>headwordExplanation</code> per translation language.</para>
            </listitem>
        </itemizedlist>
    </section>

</section>
  <section>

  <title>Extensions to <code>example</code>
  </title>
  <para>Additional children:</para>
  <programlisting format="linespecific">
sense: ...
    exampleTranslation: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;example ...&gt;
    ...
    &lt;exampleTranslation.../&gt;
&lt;/example&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    ...,
    "exampleTranslations": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <para>No changes needed.</para>
  </section>
  
</section>
  <section>

    <title>
        <code>exampleTranslation</code>
    </title>
    <para>Represents the translation of an example.</para>
    <programlisting format="linespecific">
exampleTranslation: &lt;string&gt;
    language: (1..1) &lt;langCode&gt;
    soundFile: (0..1) &lt;uri&gt;
    listingOrder: (1..1) &lt;number&gt;
</programlisting>
    <section>
        <title>XML</title>
        <programlisting format="linespecific">
&lt;exampleTranslation language="..." soundFile="..."&gt;
    &lt;text&gt;...&lt;/text&gt;
    &lt;label.../&gt;
&lt;/exampleTranslation&gt;
</programlisting>
    </section>
    <section>
        <title>JSON</title>
        <programlisting format="linespecific">
{
    "language": "...",
    "text": "...",
    "labels": [...],
    "soundFile": "..."
}
</programlisting>
    </section>
    <section>
        <title>SQL</title>
        <programlisting format="linespecific">
create table exampleTranslations (
    exampleID int foreign key references examples(id),
    language varchar(10) foreign key references translationLanguage(langCode),
    text varchar(255),
    soundFile varchar(255),
    listingOrder int,
    id int primary key
);
alter table labels (
    add exampleTranslationID foreign key references exampleTranslations(id)
)
</programlisting>
        <para>Comments</para>
        <itemizedlist>
            <listitem>
                <para>
                    <code>language</code> indicates the language of this translation. You can use the <code>translationLanguage</code> datatype to explain the meaning of the language codes that appear here and/or to constrain which language codes are allowed.</para>
            </listitem>
            <listitem>
                <para>If ony one translation language exists in your lexicographic resource, then <code>language</code> can be left out.</para>
            </listitem>
            <listitem>
                <para>For more comments see commens under <code>exampleTranslation</code> in the Bilingual Module.</para>
            </listitem>
        </itemizedlist>
    </section>
    
</section>
  <section>

  <title>Extensions to <code>tag</code>
  </title>
  <para>Redefinition of  <code>partOfSpeechConstraint</code>:</para>
  <itemizedlist>
    <listitem>
      <para>If present, says that:</para>
      <itemizedlist>
        <listitem>
          <para>If this tag is used inside a <code>headwordTranslation</code>, then it is intended to be used only inside a <code>headwordTranslation</code> labelled with this part of speech.</para>
        </listitem>
        <listitem>
          <para>If this tag is used outside a <code>headwordTranslation</code>, then it is intended to be used only inside entries that are labelled with this part of speech.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>Additional child:</para>
  <programlisting format="linespecific">
tag: ...
    translationLanguageConstraint: (0..n) &lt;langCode&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;tag ...&gt;
    ...
    &lt;translationLanguageConstraint langCode="..."/&gt;
&lt;/tag&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    ...,
    "translationLanguageConstraint": ["..."]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
alter table tags (
    add translationLanguageConstraints varchar(255), --comma-separated list
)
</programlisting>
    <para>Comments</para>
    <itemizedlist>
      <listitem>
        <para>
          <code>translationLanguageConstraint</code>, if present, says that if this tag is being used inside a <code>headwordTranslation</code> or an <code>exampleTranslation</code>, then it is intended to be used only inside <code>headwordTranslation</code> and <code>exampleTranslation</code> objects labelled with this language.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
</section>
  <section id="linking">
  <title>DMLex Linking Module</title>
  <para>DMLex's Linking Module can be used to construct <emphasis>relations</emphasis> between objects which "break out" of the tree-like parent-and-child hierarchy constructed from datatypes from the Core and from other modules. The Linking Module can be used to create relations between senses which are synonyms or antonyms, between entries whose headwords are homonyms or spelling variants, between senses which represent superordinate and subordinate concepts (eg. hypernyms and hyponyms, holonyms and meronyms), between entries and subentries, between senses and subsenses, and many others.</para>
  <para>Each relation is represented in DMLex by an instance of the <code>relation</code> datatype. A relation brings two or more <emphasis>members</emphasis> together. The fact that an object (such as a sense or an entry) is a member of a relation is represented in DMLex by an instance of the <code>member</code> datatype.</para>
  <para>The Linking Module can be used to set up relations between objects inside the same lexicographic resource, or between objects residing in different lexicographic resources.</para>
  <para>Relations themselves can be members of other relations.</para>
  <para>Examples:
    <xref linkend="ex12"/>,
    <xref linkend="ex13"/>,
    <xref linkend="ex14"/>,
    <xref linkend="ex15"/>,
    <xref linkend="ex16"/>,
    <xref linkend="ex17"/>,
    <xref linkend="ex18"/>.
  </para>
  <section>

  <title>Extensions to <code>lexicographicResource</code>
  </title>
  <para>Additional children:</para>
  <programlisting format="linespecific">
lexicographicResource: ...
    relation: (0..n)
    relationType: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;lexicographicResource ...&gt;
    ...
    &lt;relation.../&gt;
    &lt;relationType.../&gt;
&lt;/lexicographicResource&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    ...,
    "relations": [...],
    "relationTypes": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <para>No changes needed.</para>
  </section>
  
</section>
  <section>

  <title>
    <code>relation</code>
  </title>
  <para>Represents the fact that a relation exists between two or more objects.</para>
  <programlisting format="linespecific">
relation: &lt;string&gt;
    description: (0..1) &lt;string&gt;
    member: (2..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;relation type="..."&gt;
    &lt;description&gt;...&lt;/description&gt;
    &lt;member.../&gt;
&lt;/relation&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "type": "...",
    "description": "...",
    "members": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table relations (
    id int primary key,
    type varchar(10),
    description nvarchar(255)
)
</programlisting>
    <para>Comments</para>
    <itemizedlist>
      <listitem>
        <para>The value of a relation specifies what type of relation it is, for example a relation between synonyms or a relation between a sense and a subsense. Optionally, you can use <code>relationType</code> objects to explain those types and to constrain which types of relations are allowed to exist in your lexicographic resource.</para>
      </listitem>
      <listitem>
        <para>
          <code>description</code> is an optional human-readable explanation of this relation.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section>

  <title>
    <code>member</code>
  </title>
  <para>Represents the fact that an object is a member of a relation.</para>
  <programlisting format="linespecific">
member: &lt;idref&gt;
    role: (0..1) &lt;string&gt;
    listingOrder: (1..1) &lt;number&gt;
    reverseListingOrder: (1..1) &lt;number&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;member idref="..." role="..." reverseListingOrder="..."/&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "idref": "...",
    "role": "...",
    "reverseListingOrder": "..."
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table members (
    lexicographicResourceID int foreign key references lexicographicResources(id),
    relationID int foreign key references relations(id),
    memberEntryID int foreign key references entries(id),
    memberSenseID int foreign key references senses(id),
    memberCollocateMarkerID int foreign key references collocateMarkers(id),
    role nvarchar(50),
    listingOrder int,
    reverseListingOrder int,
    id int primary key
)
</programlisting>
    <para>Comments</para>
    <itemizedlist>
      <listitem>
        <para>The value of <code>member</code> is the ID of an object, such as an entry or a sense.</para>
      </listitem>
      <listitem>
        <para>
          <code>role</code> is an indication of the role the member has in this relation: whether it is the hypernym or the hyponym (in a hyperonymy/hyponymy relation), or whether it is one of the synonyms (in a synonymy relation), and so on. You can use <code>membershipRole</code> objects to explain those roles and to constrain which relations are allowed to contain which roles, what their object types are allowed to be (eg. entries or senses) and how many members with this role each relation is allowed to have.</para>
      </listitem>
      <listitem>
        <para>
          <code>listingOrder</code> is the position of this member among other members of the same relation. It should be respected when showing members of the relation to human users. This can be implicit from the serialization.</para>
      </listitem>
      <listitem>
        <para>
          <code>reverseListingOrder</code> is the position of this relation among other relations this member is involved in. It should be respected when showing the relations of this member to a human user. This can be implicit from the serialization.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section>

  <title>
    <code>relationType</code>
  </title>
  <para>Represents one of possible values for <code>relation</code>.</para>
  <programlisting format="linespecific">
relationType: &lt;string&gt;
    description: (0..1) &lt;string&gt;
    scope: (0..1) &lt;symbol&gt;
    sameAs: (0..n)
    memberRole: &lt;0..n&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;relationType type="..." scope="..."&gt;
    &lt;description&gt;...&lt;/description&gt;
    &lt;sameAs.../&gt;
    &lt;memberRole.../&gt;
&lt;/relationType&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "type": "...",
    "scope": "...",
    "sameAs": ["..."],
    "memberRoles": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table relationTypes (
    lexicographicResourceID int foreign key references lexicographicResources(id),
    type varchar(10),
    scope varcar(50),
    id int primary key
);
alter table sameAs (
    add relationTypeID int foreign key references relationTypes(id)
)
</programlisting>
    <para>Comments</para>
    <itemizedlist>
      <listitem>
        <para>
          <code>description</code> is a human-readable explanation of this relation type.</para>
      </listitem>
      <listitem>
        <para>
          <code>scope</code> specifies restrictions on member of relations of this type. The possible values are:</para>
        <itemizedlist>
          <listitem>
            <para>
              <code>sameEntry</code>: members must be within of the same <code>entry</code>
            </para>
          </listitem>
          <listitem>
            <para>
              <code>sameResource</code>: members must be within the same <code>lexicographicResource</code>
            </para>
          </listitem>
          <listitem>
            <para>
              <code>any</code>: no restriction</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>
          <code>memberRole</code> objects define roles for members of relations of this type.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
  <section>

  <title>
    <code>memberRole</code>
  </title>
  <programlisting format="linespecific">
memberRole: &lt;stringOrEmpty&gt;
    description: (1..1) &lt;string&gt;
    memberType: (1..1) &lt;symbol&gt;
    min: (0..1) &lt;number&gt;
    max: (0..1) &lt;number&gt;
    action: (1..1) &lt;symbol&gt;
    sameAs: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;memberRole role="..." memberType="..." min="..." max="..." action="..."&gt;
    &lt;description&gt;&lt;/description&gt;
    &lt;sameAs.../&gt;
&lt;/memberRole&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "role": "...",
    "description": "...",
    "memberType": "...",
    "min": "...",
    "max": "...",
    "action": "...",
    "sameAs": [...]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table memberRoles (
    relationTypeID int foreign key references relationTypes(id),
    role varchar(50),
    description varchar(255),
    memberType varchar(50),
    min int,
    max int,
    action varchar(50)
);
alter table sameAs (
    add memberRoleID int foreign key references memberRoles(id)
)
</programlisting>
    <para>Comments</para>
    <itemizedlist>
      <listitem>
        <para>If the value is empty, then members having this role do not need to have a <code>role</code> property.</para>
      </listitem>
      <listitem>
        <para>
          <code>description</code> is a human-readable explanation of this member role.</para>
      </listitem>
      <listitem>
        <para>
          <code>memberType</code> is a restrictions on the types of objects that can have this role. The possible values are:</para>
        <itemizedlist>
          <listitem>
            <para>
              <code>sense</code>: the object that has this role must be a <code>sense</code>.</para>
          </listitem>
          <listitem>
            <para>
              <code>entry</code>: the object that has this role must be an <code>entry</code>.</para>
          </listitem>
          <listitem>
            <para>
              <code>itemMarker</code>: the object that has this role must be a <code>itemMarker</code>.</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>
          <code>min</code> is a number which says that relations of this type must have at least this many members with this role. If omitted then there is no lower limit (effectively, zero).</para>
      </listitem>
      <listitem>
        <para>
          <code>max</code> is a number which says that relations of this type may have at most this many members with this role. If omitted then there is no upper limit.</para>
      </listitem>
      <listitem>
        <para>
          <code>action</code> gives instructions on what machine agents should do when showing this relation to a human user (either on its own or in the context of one of its members). The possibe values are:</para>
        <itemizedlist>
          <listitem>
            <para>
              <code>embed</code>: Members that have this role should be shown in their entirety, i.e. the entire entry or the entire sense. This is suitable for the relation between entries and subentries, or senses and subsenses.</para>
          </listitem>
          <listitem>
            <para>
              <code>navigate</code>: Members that have this role should not be shown in their entirety, but a navigable (e.g. clickable) link should be provided. This is suitable for the relation between synonyms, for example.</para>
          </listitem>
          <listitem>
            <para>
              <code>none</code>: Members that have this role should not shown.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
</section>
  <section id="inline">
  <title>DMLex Inline Markup Module</title>
  <para>This module makes it possible to mark up substrings inside the string values of certain objects and to attach properties to them.</para>
  <para>It is up to the implementer to decide how to implement inline markup in an implementation of the DMLex Inline Markup module, whether <emphasis>in-place</emphasis> (as XML) or as <emphasis>stand-off</emphasis> markup (for example through start and end indexes).</para>
  <section>

  <title>Extensions to <code>headword</code>
  </title>
  <para>Additional children:</para>
  <programlisting format="linespecific">
headword: ...
    placeholderMarker: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;headword&gt;
    ...&lt;placeholderMarker&gt;...&lt;/placeholderMarker&gt;...
&lt;/headword&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    ...,
    "headword": "...",
    "placeholderMarkers": [...],
    ...
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <para>No changes needed.</para>
  </section>
  
</section>
  <section>

    <title>Extensions to <code>exampleTranslation</code>
    </title>
    <para>Additional children:</para>
    <programlisting format="linespecific">
exampleTranslation: ...
    headwordMarker: (0..n)
    itemMarker: (0..n)
</programlisting>
    <section>
        <title>XML</title>
        <programlisting format="linespecific">
&lt;exampleTranslation&gt;
    &lt;text&gt;
        ...
        &lt;headwordMarker&gt;...&lt;/headwordMarker&gt;
        ...
        &lt;itemMarker...&gt;...&lt;/itemMarker&gt;
        ...
    &lt;/text&gt;
&lt;/exampleTranslation&gt;
</programlisting>
    </section>
    <section>
        <title>JSON</title>
        <programlisting format="linespecific">
{
    "text": "...",
    "headwordMarkers": [...],
    "itemMarkers": [...],
    ...
}
</programlisting>
    </section>
    <section>
        <title>SQL</title>
        <para>No changes needed.</para>
    </section>
    
</section>
  <section>

  <title>Extensions to <code>example</code>
  </title>
  <para>Additional children:</para>
  <programlisting format="linespecific">
example: ...
    headwordMarker: (0..n)
    itemMarker: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;example&gt;
    &lt;text&gt;
        ...
        &lt;headwordMarker&gt;...&lt;/headwordMarker&gt;
        ...
        &lt;itemMarker...&gt;...&lt;/itemMarker&gt;
        ...
    &lt;/text&gt;
&lt;/example&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "text": "...",
    "headwordMarkers": [...],
    "itemMarkers": [...],
    ...
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <para>No changes needed.</para>
  </section>
  
</section>
  <section>

  <title>Extensions to <code>example</code>
  </title>
  <para>Additional children:</para>
  <programlisting format="linespecific">
example: ...
    headwordMarker: (0..n)
    itemMarker: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;example&gt;
    &lt;text&gt;
        ...
        &lt;headwordMarker&gt;...&lt;/headwordMarker&gt;
        ...
        &lt;itemMarker...&gt;...&lt;/itemMarker&gt;
        ...
    &lt;/text&gt;
&lt;/example&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "text": "...",
    "headwordMarkers": [...],
    "itemMarkers": [...],
    ...
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <para>No changes needed.</para>
  </section>
  
</section>
  <section>

  <title>Extensions to <code>definition</code>
  </title>
  <para>Additional children:</para>
  <programlisting format="linespecific">
definition: ...
    headwordMarker: (0..n)
    itemMarker: (0..n)
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;definition...&gt;
    ...
    &lt;headwordMarker&gt;...&lt;/headwordMarker&gt;
    ...
    &lt;itemMarker...&gt;...&lt;/itemMarker&gt;
    ...
&lt;/definition&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "text": "...",
    "headwordMarkers": [...],
    "itemMarkers": [...],
    ...
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <para>No changes needed.</para>
  </section>
  
</section>
  <section>

  <title>
    <code>placeholderMarker</code>
  </title>
  <para>Marks up a substring inside a headword or inside a headword translation which is not part of the expression itself but stands for things that can take its place. An application can use the inline markup to format the placeholders differently from the rest of the text, to ignore the placeholder in full-text search, and so on. Examples: <xref linkend="ex19"/>, <xref linkend="ex20"/>.</para>
  <programlisting format="linespecific">
placeholderMarker: &lt;string&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;placeholderMarker&gt;...&lt;/placeholderMarker&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "startIndex": ...,
    "endIndex": ...
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table placeholderMarkers (
    entryID int foreign key references entries(id),
    startIndex int,
    endIndex int,
    id int primary key
)
</programlisting>
  </section>
  
</section>
  <section>

  <title>
    <code>headwordMarker</code>
  </title>
  <para>Marks up a substring inside an example, inside an example translation or inside a definition which corresponds to the headword (or to a translation of the headword). An application can use the inline markup to highlight the occurence of the headword for human readers through formatting. Example: <xref linkend="ex21"/>.</para>
  <programlisting format="linespecific">
headwordMarker: &lt;string&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;headwordMarker&gt;...&lt;/headwordMarker&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "startIndex": ...,
    "endIndex": ...
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table headwordMarkers (
    entryID int foreign key references entries(id),
    headwordTranslationID int foreign key references headwordTranslations(id),
    definitionID int foreign key references definitions(id),
    startIndex int,
    endIndex int,
    id int primary key
)
</programlisting>
  </section>
  
</section>
  <section>

  <title>
    <code>itemMarker</code>
  </title>
  <para>Marks up a substring other than the headword inside an example, inside an example translation or inside a definition. An application can use the inline markup to highlight collocates or constituents. Example: <xref linkend="ex22"/>.</para>
  <programlisting format="linespecific">
itemMarker: &lt;string&gt;
    lemma: (0..1) &lt;string&gt;
    itemRole: (0..n) &lt;string&gt;
</programlisting>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;itemMarker lemma="..."&gt;
    ...
    &lt;itemRole value="..."/&gt;
&lt;/itemMarker&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "startIndex": ...,
    "endIndex": ...,
    lemma: "...",
    itemRoles: ["..."]
}
</programlisting>
  </section>
  <section>
    <title>SQL</title>
    <programlisting format="linespecific">
create table itemMarkers (
    entryID int foreign key references entries(id),
    headwordTranslationID int foreign key references headwordTranslations(id),
    definitionID int foreign key references definitions(id),
    startIndex int,
    endIndex int,
    lemma varchar(50),
    id int primary key
);
create table itemMarkerRoles (
    itemMarkerID int foreign key references itemMarkers(id),
    role: "...",
    id int primary key
)
</programlisting>
  </section>
  <section>
    <title>Comments</title>
    <itemizedlist>
      <listitem>
        <para>
          <code>lemma</code> is the lemmatized form of the collocate. An application can use it to provide a clickable link for the user to search for the lemma in the rest of the lexicographic resource or on the web. (If you want to link the collocate explicitly to a specific entry or to a specific sense in your lexicographic resource, or even in an external lexicographic resource, you can use the Linking Module for that.)</para>
      </listitem>
      <listitem>
        <para>
          <code>itemRole</code> can be used to communicate facts about the role of the item in the sentence, for example its syntactic role (subject, direct object etc.), its semantic role (agent, affected etc) or its semantic type (human, institution etc.) Optionally, you use the <code>tag</code> datatype to explain and/or constrain the item types that are allowed to appear in your lexicographic resource.</para>
      </listitem>
    </itemizedlist>
  </section>
  
</section>
</section>
  
  <!--  examples  -->
  <section id="examples">
  <title>Examples</title>
  <para>This section gives examples which show how to use DMLex to model lexicographic resources. The examples are shown in three formalisms: NVH, XML and JSON.</para>
  <para>Each example is shown in NVH first. NVH (Name-Value Hierarchy)[^1] is a concise serialization language designed for lexicographic data. NVH encodes data as a hierarchical list of names, values and children, which corresponds exactly to DMLex’s own data model. We use NVH here in order to demonstrate the object model at an abstract level.</para>
  <para>After that, each example is shown in XML and JSON, two popular serialization languages. The XML and JSON encoding shown here follows DMLex’s own implementation guidance for XML and JSON.</para>
  <section id="ex00">
  <title>A basic entry</title>
  <para>This is a basic, beginner-level example of how to use DMLex to represent a simple monolingual lexicographic resource consisting of one entry with two senses. It demonstrates some of the basic features of DMLex Core: how to subdivide a entry into senses, how attach various data such as definition, part-of-speech labels to entries and senses, and how to add labels to various objects such as senses and examples.</para>
  <section>
    <title>NVH</title>
    <programlisting format="linespecific">
lexicographicResource: my-dictionary
    entry: abandon-verb
        headword: abandon
        partOfSpeech: verb
        sense: abandon-verb-1
            definition: to suddenly leave a place or a person
            example: I'm sorry I abandoned you like that.
            example: Abandon ship!
                label: idiom
        sense: abandon-verb-2
            label: mostly-passive
            definition: to stop supporting an idea
            example: That theory has been abandoned.
</programlisting>
  </section>
  <section>
    <title>XML</title>
    <programlisting format="linespecific">
&lt;lexicographicResource id="my-dictionary"&gt;
    &lt;entry id="abandon-verb"&gt;
        &lt;headword&gt;abandon&lt;/headword&gt;
        &lt;partOfSpeech value="verb"/&gt;
        &lt;sense id="abandon-verb-1"&gt;
            &lt;definition&gt;to suddenly leave a place or a person&lt;/definition&gt;
            &lt;example&gt;
                &lt;text&gt;I'm sorry I abandoned you like that.&lt;/text&gt;
            &lt;/example&gt;
            &lt;example&gt;
                &lt;text&gt;Abandon ship!&lt;/text&gt;
                &lt;label value="idiom"/&gt;
            &lt;/example&gt;
        &lt;sense id="abandon-verb-2"&gt;
            &lt;label value="mostly-passive"/&gt;
            &lt;definition&gt;to stop supporting an idea&lt;/definition&gt;
            &lt;example&gt;
                &lt;text&gt;That theory has been abandoned.&lt;/text&gt;
            &lt;/example&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
&lt;lexicographicResource&gt;
</programlisting>
  </section>
  <section>
    <title>JSON</title>
    <programlisting format="linespecific">
{
    "id": "my-dictionary",
    "entry": {
        "id": "abandon-verb",
        "headword": "abandon",
        "partsOfSpeech": ["verb"],
        "senses": [{
            "id": "abandon-verb-1",
            "definitions": [{
                "text": "to suddenly leave a place or a person"
            }],
            "examples": [{
                "text": "I'm sorry I abandoned you like that."
            }, {
                "text": "Abandon ship!",
                "labels": ["idiom"]
            }]
        }, {
            "id": "abandon-verb-2",
            "labels": ["mostly-passive"],
            "definitions": ["to stop supporting an idea"],
            "examples": [{
                "text": "That theory has been abandoned."
            }]
        }]
    }
}
</programlisting>
  </section>
</section>
  <section id="ex01">

                         <title>How to use <code>inflectedForm</code></title>
                         <para>This is an entry from a hypothetical Irish dictionary for the headword "folúsghlantóir" ("vacuum cleaner") which gives its two inflected forms, the singular genitive and the plural.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: folúsghlantóir-n
    headword: folúsghlantóir
    partOfSpeech: n-masc
    inflectedForm: folúsghlantóra
        inflectedTag: sg-gen
    inflectedForm: folúsghlantóirí
        inflectedTag: pl
    sense: ...
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="folúsghlantóir-n"&gt;
    &lt;headword&gt;folúsghlantóir&lt;/headword&gt;
    &lt;partOfSpeech value="n-masc"/&gt;
    &lt;inflectedForm inflectedTag="sg-gen"&gt;folúsghlantóra&lt;/inflectedForm&gt;
    &lt;inflectedForm inflectedTag="pl"&gt;folúsghlantóirí&lt;/inflectedForm&gt;
    &lt;sense&gt;...&lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "folúsghlantóir-n",
    "headword": "folúsghlantóir",
    "partsOfSpeech": ["n-masc"],
    "inflectedForms": [{
        "text": "folúsghlantóra",
        "inflectedTag": "sg-gen",
    }, {
        "text": "folúsghlantóirí",
        "inflectedTag": "pl",
    }],
    "senses": [...]
}
</programlisting>
                         </section>
                         

</section>
  <section id="ex02">
                         
                         <title>Pronunciation given as transcription</title>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: aardvark-noun
    headword: aardvark
    pronunciation:
        transcription: a:rdva:rk
    sense: ...
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="aardvark-noun"&gt;
    &lt;headword&gt;aardvark&lt;/headword&gt;
    &lt;pronunciation&gt;
        &lt;transcription&gt;a:rdva:rk&lt;/transcription&gt;
    &lt;/pronunciation&gt;
    &lt;sense&gt;...&lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "aardvark-noun",
    "headword": "aardvark",
    "pronunciations": [{
        "transcriptions": [{"text": "a:rdva:rk"}]
    }],
    "senses": [...]
}
</programlisting>
                         </section>
                         

</section>
  <section id="ex03">
                         <title>Pronunciation given as a sound file</title>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: aardvark-noun
    headword: aardvark
    pronunciation:
        soundFile: aardvark.mp3
    sense: ...
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="aardvark-noun"&gt;
    &lt;headword&gt;aardvark&lt;/headword&gt;
    &lt;pronunciation soundFile="aardvark.mp3"/&gt;
    &lt;sense&gt;...&lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "aardvark-noun",
    "headword": "aardvark",
    "pronunciations": [{
        "soundFile": "aardvark.mp3"
    }],
    "senses": [...]
}
</programlisting>
                         </section>
                         
</section>
  <section id="ex04">
                         <title>Pronunciation given both ways</title>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: aardvark-noun
    headword: aardvark
    pronunciation:
        transcription: a:rdva:rk
        soundFile: aardvark.mp3
    sense: ...
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="aardvark-noun"&gt;
    &lt;headword&gt;aardvark&lt;/headword&gt;
    &lt;pronunciation soundFile="aardvark.mp3"&gt;
        &lt;transcription&gt;a:rdva:rk&lt;/transcription&gt;
    &lt;/pronunciation&gt;
    &lt;sense&gt;...&lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "aardvark-noun",
    "headword": "aardvark",
    "pronunciations": [{
        "soundFile": "aardvark.mp3",
        "transcriptions": [{"text": "a:rdva:rk"}]
    }],
    "senses": [...]
}
</programlisting>
                         </section>
                         
</section>
  <section id="ex05">
                         <title>How to use <code>tag</code></title>
                         <para>This is an entry from a hypothetical Irish dictionary for the headword "folúsghlantóir" ("vacuum cleaner"). The meaning of the various tags used in this entry is explained in the <code>tag</code> objects.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: my-irish-dictionary
    language: ga
    entry: folúsghlantóir-n
        headword: folúsghlantóir
        partOfSpeech: n-masc
        inflectedForm: folúsghlantóra
            inflectedTag: sg-gen
        inflectedForm: folúsghlantóirí
            inflectedTag: pl
        sense: ...
    tag: n-masc
        description: noun, masculine
        target: partOfSpeech
    tag: n-fem
        description: noun, feminine
        target: partOfSpeech
    tag: sg-gen
        description: singular genitive
        target: inflectedTag
        partOfSpeechConstraint: n-masc
        partOfSpeechConstraint: n-fem
    tag: pl
        description: plural
        target: inflectedTag
        partOfSpeechConstraint: n-masc
        partOfSpeechConstraint: n-fem
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="my-irish-dictionary" language="ga"&gt;
    &lt;entry id="folúsghlantóir-n"&gt;
        &lt;headword&gt;folúsghlantóir&lt;/headword&gt;
        &lt;partOfSpeech value="n-masc"/&gt;
        &lt;inflectedForm inflectedTag="sg-gen"&gt;folúsghlantóra&lt;/inflectedForm&gt;
        &lt;inflectedForm inflectedTag="pl"&gt;folúsghlantóirí&lt;/inflectedForm&gt;
        &lt;sense&gt;...&lt;/sense&gt;
    &lt;/entry&gt;
    &lt;tag value="n-masc"&gt;
        &lt;description&gt;noun, masculine&lt;/description&gt;
        &lt;target value="partOfSPeech"/&gt;
    &lt;/tag&gt;
    &lt;tag value="n-fem"&gt;
        &lt;description&gt;noun, feminine&lt;/description&gt;
        &lt;target value="partOfSPeech"/&gt;
    &lt;/tag&gt;
    &lt;tag value="sg-gen"&gt;
        &lt;description&gt;singular genitive&lt;/description&gt;
        &lt;target value="inflectedTag"/&gt;
        &lt;partOfSpeechConstraint value="n-masc"/&gt;
        &lt;partOfSpeechConstraint value="n-fem"/&gt;
    &lt;/tag&gt;
    &lt;tag value="pl"&gt;
        &lt;description&gt;plural&lt;/description&gt;
        &lt;target value="inflectedTag"/&gt;
        &lt;partOfSpeechConstraint value="n-masc"/&gt;
        &lt;partOfSpeechConstraint value="n-fem"/&gt;
    &lt;/tag&gt;
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "my-irish-dictionary",
    "language": "ga",
    "entries": [{
        "id": "folúsghlantóir-n",
        "headword": "folúsghlantóir",
        "partsOfSpeech": ["n-masc"],
        "inflectedForms": [{
            "text": "folúsghlantóra",
            "inflectedTag": "sg-gen",
        }, {
            "text": "folúsghlantóirí",
            "inflectedTag": "pl",
        }],
        "senses": [...]
    }],
    "tags": [{
        "value": "n-masc",
        "description": "noun, masculine",
        "targets": ["partOfSpeech"]
    }, {
        "value": "n-fem",
        "description": "noun, feminine",
        "targets": ["partOfSpeech"]
    }, {
        "value": "sg-gen",
        "description": "singular genitive",
        "targets": ["inflectedTag"],
        "partOfSpeechConstraints": ["n-masc", "n-fem"]
    }, {
        "value": "pl",
        "description": "plural",
        "targets": ["inflectedTag"],
        "partOfSpeechConstraints": ["n-masc", "n-fem"]
    }]
}
</programlisting>
                         </section>
                         
</section>
  <section id="ex06">

                         <title>Mapping <code>tag</code> to external inventories</title>
                         <para>This shows how to map the value of a tag such as <code>n-masc</code> and <code>n-fem</code> to items in an external inventory such as LexInfo.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
tag: n-masc
    description: noun, masculine
    target: partOfSpeech
    sameAs: http://www.lexinfo.net/ontology/3.0/lexinfo#noun
    sameAs: http://www.lexinfo.net/ontology/3.0/lexinfo#masculine
tag: n-fem
    description: noun, feminine
    target: partOfSpeech
    sameAs: http://www.lexinfo.net/ontology/3.0/lexinfo#noun
    sameAs: http://www.lexinfo.net/ontology/3.0/lexinfo#feminine
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;tag value="n-masc"&gt;
    &lt;description&gt;noun, masculine&lt;/description&gt;
    &lt;target value="partOfSPeech"/&gt;
    &lt;sameAs uri="http://www.lexinfo.net/ontology/3.0/lexinfo#noun"/&gt;
    &lt;sameAs uri="http://www.lexinfo.net/ontology/3.0/lexinfo#masculine"/&gt;
&lt;/tag&gt;
&lt;tag value="n-fem"&gt;
    &lt;description&gt;noun, feminine&lt;/description&gt;
    &lt;target value="partOfSPeech"/&gt;
    &lt;sameAs uri="http://www.lexinfo.net/ontology/3.0/lexinfo#noun"/&gt;
    &lt;sameAs uri="http://www.lexinfo.net/ontology/3.0/lexinfo#feminine"/&gt;
&lt;/tag&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "tags": [{
        "value": "n-masc",
        "description": "noun, masculine",
        "targets": ["partOfSpeech"],
        "sameAs": [
            "http://www.lexinfo.net/ontology/3.0/lexinfo#noun",
            "http://www.lexinfo.net/ontology/3.0/lexinfo#masculine"
        ]
    }, {
        "value": "n-fem",
        "description": "noun, feminine",
        "targets": ["partOfSpeech"],
        "sameAs": [
            "http://www.lexinfo.net/ontology/3.0/lexinfo#noun",
            "http://www.lexinfo.net/ontology/3.0/lexinfo#feminine"
        ]
    }]
}
</programlisting>
                         </section>
                         

</section>
  <section id="ex07">

                         <title>Defining a bilingual lexicographic resource</title>
                         <para>This defines a lexicographic resource where the source language is German and the translation language is English and the English translations are going to come with pronunciation transcriptions in English IPA.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: deueng
    title: My German-English Dictionary
    language: de
    translationLanguage: en
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="deueng" language="de"&gt;
    &lt;title&gt;My German-English Dictionary&lt;/title&gt;
    &lt;translationLanguage langCode="en"/&gt;
    ...
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "deueng",
    "title": "My German-English Dictionary",
    "language": "de",
    "translationLanguages": ["en"],
    ...
}
</programlisting>
                         </section>
                         

</section>
  <section id="ex10">

                         <title>Defining a multilingual lexicographic resource</title>
                         <para>This defines a lexicographic resource where the source language is Irish and the translation languages are English, German and Czech.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: irish-multilingual
    description: My Irish-Multilingual Dictionary
    language: ga
    translationLanguage: en
    translationLanguage: de
    translationLanguage: cs
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="irish-multilingual" language="ga"&gt;
    &lt;title&gt;My Irish-Multilingual Dictionary&lt;/title&gt;
    &lt;translationLanguage langCode="en"/&gt;
    &lt;translationLanguage langCode="de"/&gt;
    &lt;translationLanguage langCode="cs"/&gt;
    ...
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "irish-multilingual",
    "title": "My Irish-Multilingual Dictionary",
    "language": "ga",
    "translationLanguages": ["en", "de", "cs"],
    ...
}
</programlisting>
                         </section>

</section>
  <section id="ex08">

                         <title>How to use <code>headwordTranslation</code> in a bilingual lexicographic resource</title>
                         <para>This is an entry from a hypothetical English-German dictionary for English-speaking learners of German.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: doctor-n
    headword: doctor
    sense: doctor-n-1
        indicator: medical doctor
        headwordTranslation: Arzt
            partOfSpeech: n-masc
        headwordTranslation: Ärztin
            partOfSpeech: n-fem
    sense: doctor-n-2
        indicator: academic title
        headwordTranslation: Doktor
            partOfSpeech: n-masc
        headwordTranslation: Doktorin
            partOfSpeech: n-fem
            label: rare
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="doctor-n"&gt;
    &lt;headword&gt;doctor&lt;/headword&gt;
    &lt;sense id="doctor-n-1"&gt;
        &lt;indicator&gt;medical doctor&lt;/indicator&gt;
        &lt;headwordTranslation&gt;
            &lt;text&gt;Arzt&lt;/text&gt;
            &lt;partOfSpeech value="n-masc"/&gt;
        &lt;/headwordTranslation&gt;
        &lt;headwordTranslation&gt;
            &lt;text&gt;Ärztin&lt;/text&gt;
            &lt;partOfSpeech value="n-fem"/&gt;
        &lt;/headwordTranslation&gt;
    &lt;/sense&gt;
    &lt;sense id="doctor-n-2"&gt;
        &lt;indicator&gt;academic title&lt;/indicator&gt;
        &lt;headwordTranslation&gt;
            &lt;text&gt;Doktor&lt;/text&gt;
            &lt;partOfSpeech value="n-masc"/&gt;
        &lt;/headwordTranslation&gt;
        &lt;headwordTranslation&gt;
            &lt;text&gt;Doktorin&lt;/text&gt;
            &lt;partOfSpeech value="n-fem"/&gt;
        &lt;/headwordTranslation&gt;
    &lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "doctor-n",
    "headword": "doctor",
    "senses": [{
        "id": "doctor-n-1",
        "indicator": "medical doctor",
        "headwordTranslations": [{
            "text": "Arzt",
            "partsOfSpeech": ["n-masc"]
        }, {
            "text": "Ärztin",
            "partsOfSpeech": ["n-fem"]
        }]
    }, {
        "id": "doctor-n-2",
        "indicator": "academic title",
        "headwordTranslations": [{
            "text": "Doktor",
            "partsOfSpeech": ["n-masc"]
        }, {
            "text": "Doktorin",
            "partsOfSpeech": ["n-fem"]
        }]
    }]
}
</programlisting>
                         </section>

</section>
  <section id="ex11">

                         <title>How to use <code>headwordTranslation</code> in a multilingual lexicographic resource</title>
                         <para>This is an entry from a hypothetical Irish-multilingual dictionary.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: fómhar-n
    headword: fómhar
    sense: fómhar-n-1
        headwordTranslation: autumn
            language: en
        headwordTranslation: fall
            language: en
        headwordTranslation: Herbst
            language: de
        headwordTranslation: podzim
            language: cs
    sense: fómhar-n-2
        headwordTranslation: harvest
            language: en
        headwordTranslation: Ernte
            language: de
        headwordTranslation: sklizeň
            language: cs
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="fómhar-n"&gt;
    &lt;headword&gt;fómhar&lt;/headword&gt;
    &lt;sense id="fómhar-n-1"&gt;
        &lt;headwordTranslation language="en"&gt;
            &lt;text&gt;autumn&lt;/text&gt;
        &lt;/headwordTranslation&gt;
        &lt;headwordTranslation language="en"&gt;
            &lt;text&gt;fall&lt;/text&gt;
        &lt;/headwordTranslation&gt;
        &lt;headwordTranslation language="de"&gt;
            &lt;text&gt;Herbst&lt;/text&gt;
        &lt;/headwordTranslation&gt;
        &lt;headwordTranslation language="cs"&gt;
            &lt;text&gt;podzim&lt;/text&gt;
        &lt;/headwordTranslation&gt;
    &lt;/sense&gt;
    &lt;sense id="fómhar-n-2"&gt;
        &lt;headwordTranslation language="en"&gt;
            &lt;text&gt;harvest&lt;/text&gt;
        &lt;/headwordTranslation&gt;
        &lt;headwordTranslation language="de"&gt;
            &lt;text&gt;Ernte&lt;/text&gt;
        &lt;/headwordTranslation&gt;
        &lt;headwordTranslation language="cs"&gt;
            &lt;text&gt;sklizeň&lt;/text&gt;
        &lt;/headwordTranslation&gt;
    &lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "fómhar-n",
    "headword": "fómhar",
    "senses": [{
        "id": "fómhar-n-1",
        "headwordTranslations": [{
            "language": "en",
            "text": "autumn"
        }, {
            "language": "en",
            "text": "fall"
        }, {
            "language": "de",
            "text": "Herbst"
        }, {
            "language": "cs",
            "text": "podzim"
        }]
    }, {
        "id": "fómhar-n-2",
        "headwordTranslations": [{
            "language": "en",
            "text": "harvest"
        }, {
            "language": "de",
            "text": "Ernte"
        }, {
            "language": "cs",
            "text": "sklizeň"
        }]
    },]
}
</programlisting>
                         </section>
                         
</section>
  <section id="ex09">

                         <title>How to use <code>headwordExplanation</code></title>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: treppenwitz
    headword: Treppenwitz
    partOfSpeech: n-masc
    sense: treppenwitz-1
        headwordExplanation: belated realisation of what one could have said
        headwordTranslation: staircase wit
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="treppenwitz"&gt;
    &lt;headword&gt;Treppenwitz&lt;/headword&gt;
    &lt;partOfSpeech value="n-masc"/&gt;
    &lt;sense id="treppenwitz-1"&gt;
        &lt;headwordExplanation&gt;
            belated realisation of what one could have said
        &lt;/headwordExplanation&gt;
        &lt;headwordTranslation&gt;
            &lt;text&gt;staircase wit&lt;/text&gt;
        &lt;/headwordTranslation&gt;
    &lt;/sense&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "treppenwitz",
    "headword": "Treppenwitz",
    "partsOfSpeech": ["n-masc"],
    "senses": [{
        "id": "treppenwitz-1",
        "headwordExplanations": [{
            "text": "belated realisation of what one could have said"
        }],
        "headwordTranslations": [{
            "text": "staircase wit"
        }]
    }]
}
</programlisting>
                         </section>

</section>
  <section id="ex12">

                         <title>Modelling parts and wholes</title>
                         <para>We have three entries with one sense each: "glasses", "microscope" and "lens". We want to represent the fact that "lens" is a meronym of both "glasses" and "microscope", and simultanously that "glasses" and "microscope" are both holonyms of "lens".</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: my-dictionary
    language: en
    entry: glasses
        headword: glasses
        sense: glasses-1
            definition: an optical seeing aid
    entry: microscope
        headword: microscope
        sense: microscope-1
            definition: equipment for looking at very small things
    entry: lens
        headword: lens
        sense: lens-1
            definition: curved glass that makes things seem bigger
    relation: meronymy
        member: glasses-1
            role: whole
        member: lens-1
            role: part
    relation: meronymy
        member: microscrope-1
            role: whole
        member: lens-1
            role: part
    relationType: meronomy
        description: used for modelling part-whole relationships
        memberRole: whole
            description: the whole
            memberType: sense
            min: 1
            max: 1
            action: navigate
        memberRole: part
            description: the part
            memberType: sense
            min: 1
            max: 1
            action: navigate
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="my-dictionary" language="en"&gt;
    &lt;entry id="glasses"&gt;
        &lt;headword&gt;glasses&lt;/headword&gt;
        &lt;sense id="glasses-1"&gt;
            &lt;definition&gt;an optical seeing aid&lt;/definition&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;entry id="microscope"&gt;
        &lt;headword&gt;microscope&lt;/headword&gt;
        &lt;sense id="microscope-1"&gt;
            &lt;definition&gt;equipment for looking at very small things&lt;/definition&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;entry id="lens"&gt;
        &lt;headword&gt;lens&lt;/headword&gt;
        &lt;sense id="lens-1"&gt;
            &lt;definition&gt;curved glass that makes things seem bigger&lt;/definition&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;relation type="meronymy"&gt;
        &lt;member idref="glasses-1" role="whole"/&gt;
        &lt;member idref="lens-1" role="part"/&gt;
    &lt;/relation&gt;
    &lt;relation type="meronymy"&gt;
        &lt;member idref="microscrope-1" role="whole"/&gt;
        &lt;member idref="lens-1" role="part"/&gt;
    &lt;/relation&gt;
    &lt;relationType type="meronomy"&gt;
        &lt;description&gt;used for modelling part-whole relationships&lt;/description&gt;
        &lt;memberRole role="whole" memberType="sense"  min="1" max="1" action="navigate"&gt;
            &lt;description&gt;the whole&lt;/description&gt;
        &lt;/memberRole&gt;
        &lt;memberRole role="part" memberType="sense" min="1" max="1" action="navigate"&gt;
            &lt;description&gt;the part&lt;/description&gt;
        &lt;/memberRole&gt;
    &lt;/relationType&gt;
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "my-dictionary",
    "language": "en",
    "entries": [{
        "id": "glasses",
        "headword": "glasses",
        "senses": [{
            "id": "glasses-1",
            "definition": "an optical seeing aid"
        }, {
        "id": "microscope",
        "headword": "microscope",
        "senses": [{
            "id": "microscope-1",
            "definition": "equipment for looking at very small things"
        }, {
        "id": "lens",
        "headword": "lens",
        "senses": [{
            "id": "lens-1",
            "definition": "curved glass that makes things seem bigger"
        }]
    }],
    "relations": [{
        "type": "meronymy",
        "members": [{
            "idref": "glasses-1",
            "role": "whole"
        }, {
            "idref": "lens-1",
            "role": "part"
        }]
    }, {
        "type": "meronymy",
        "members": [{
            "idref": "microscope-1",
            "role": "whole"
        }, {
            "idref": "lens-1",
            "role": "part"
        }]
    }],
    "relationTypes": [{
        "type": "meronymy",
        "description": "used for modelling part-whole relationships",
        "memberRoles": [{
            "role": "whole",
            "description": "the whole",
            "memberType": "sense",
            "min": 1,
            "max": 1,
            "action": "navigate"
        }, {
            "role": "part",
            "description": "the part",
            "memberType": "sense",
            "min": 1,
            "max": 1,
            "action": "navigate"
        }]
    }]
}
</programlisting>
                         </section>
                         <section>
                                                  <title>Suggested rendering for human users</title>
                                                  <blockquote>
                                                                           <para>
                                                                                                    <emphasis role="strong">lens</emphasis>
                                                                           </para>
                                                                           <itemizedlist>
                                                                                                    <listitem>
                                                                                                                             <para>curved glass that makes things seem bigger <emphasis>things that contain lens:</emphasis>
                                                                                                                                                      <emphasis role="strong">glasses</emphasis>, <emphasis role="strong">microscope</emphasis>
                                                                                                                             </para>
                                                                                                    </listitem>
                                                                           </itemizedlist>
                                                  </blockquote>
                         </section>
                         

</section>
  <section id="ex13">

                         <title>Modelling antonyms</title>
                         <para>We have two entries for the verbs "buy" and "sell" with one sense each. We want to express the fact that the senses are antonyms.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: my-dictionary
    language: en
    entry: buy
        headword: buy
        sense: buy-1
            definition: get something by paying money for it
    entry: sell
        headword: sell
        sense: sell-1
            definition: exchange something for money
    relation: ants
        member: buy-1
        member: sell-1
    relationType: ants
        description: antonyms
        memberRole:
            memberType: sense
            min: 2
            max: 2
            action: navigate
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="my-dictionary" language="en"&gt;
    &lt;entry id="buy"&gt;
        &lt;headword&gt;buy&lt;/headword&gt;
        &lt;sense id="buy-1"&gt;
            &lt;definition&gt;get something by paying money for it&lt;/definition&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;entry id="sell"&gt;
        &lt;headword&gt;sell&lt;/headword&gt;
        &lt;sense id="sell-1"&gt;
            &lt;definition&gt;exchange something for money&lt;/definition&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;relation type="ants"&gt;
        &lt;member idref="buy-1"/&gt;
        &lt;member idref="sell-1"/&gt;
    &lt;/relation&gt;
    &lt;relationType type="ants"&gt;
        &lt;description&gt;antonyms&lt;/description&gt;
        &lt;memberRole memberType="sense" min="2" max="2" action="navigate"/&gt;
    &lt;/relationType&gt;
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "my-dictionary",
    "language": "en",
    "entries": [{
        "id": "buy",
        "headword": "buy",
        "senses": [{
            "id": "buy-1",
            "definition": "get something by paying money for it"
        }, {
        "id": "sell",
        "headword": "sell",
        "senses": [{
            "id": "sell-1",
            "definition": "exchange something for money"
        }]
    }],
    "relations": [{
        "type": "ants",
        "members": [
            {"idref": "buy-1"},
            {"idref": "sell-1"}
        ]
    }],
    "relationTypes": [{
        "type": "ants",
        "description": "antonyms",
        "memberRoles": [{
            "memberType": "sense",
            "min": 2,
            "max": 2,
            "action": "navigate"
        }]
    }]
}
</programlisting>
                         </section>
                         <section>
                                                  <title>Suggested rendering for human users</title>
                                                  <blockquote>
                                                                           <para>
                                                                                                    <emphasis role="strong">buy</emphasis>
                                                                           </para>
                                                                           <itemizedlist>
                                                                                                    <listitem>
                                                                                                                             <para>get something by paying money for it <emphasis>opposite meaning:</emphasis>
                                                                                                                                                      <emphasis role="strong">sell</emphasis>
                                                                                                                             </para>
                                                                                                    </listitem>
                                                                           </itemizedlist>
                                                  </blockquote>
                         </section>

</section>
  <section id="ex14">

                         <title>Modelling synonyms</title>
                         <para>We have three German entries with one sense each, two which mean "sea" and one which means "ocean". We want to set up a relation which brings these three sense together as near-synonyms.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: my-dictionary
    language: de
    translationLanguage: en
    entry: die-see
        headword: See
        partOfSpeech: n-fem
        sense: die-see-1
            headwordTranslation: sea
    entry: das-meer
        headword: Meer
        partOfSpeech: n-neut
        sense: das-meer-1
            headwordTranslation: sea
    entry: der-ozean
        headword: Ozean
        partOfSpeech: n-masc
        sense: der-ozean-1
            translation: ocean
    relation: syns
        description: words that mean sea and ocean
        member: die-see-1
        member: das-meer-1
        member: der-ozean-1
    relationType: syns
        description: synonyms and near synonyms
        memberRole:
            memberType: sense
            min: 2
            action: navigate
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="my-dictionary" language="en"&gt;
    &lt;translationLanguage langCode="de"/&gt;
    &lt;entry id="die-see"&gt;
        &lt;headword&gt;See&lt;/headword&gt;
        &lt;partOfSpeech value="n-fem"/&gt;
        &lt;sense id="die-see-1"&gt;
            &lt;headwordTranslation&gt;&lt;text&gt;sea&lt;/text&gt;&lt;/headwordTranslation&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;entry id="das-meer"&gt;
        &lt;headword&gt;Meer&lt;/headword&gt;
        &lt;partOfSpeech value="n-neut"/&gt;
        &lt;sense id="das-meer-1"&gt;
            &lt;headwordTranslation&gt;&lt;text&gt;sea&lt;/text&gt;&lt;/headwordTranslation&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;entry id="der-ozean"&gt;
        &lt;headword&gt;Ozean&lt;/headword&gt;
        &lt;partOfSpeech value="n-masc"/&gt;
        &lt;sense id="der-ozean-1"&gt;
            &lt;headwordTranslation&gt;&lt;text&gt;ocean&lt;/text&gt;&lt;/headwordTranslation&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;relation type="syns"&gt;
        &lt;description&gt;words that mean sea and ocean&lt;/description&gt;
        &lt;member idref="die-see-1"/&gt;
        &lt;member idref="das-meer-1"/&gt;
        &lt;member idref="der-ozean-1"/&gt;
    &lt;/relation&gt;
    &lt;relationType type="syns"&gt;
        &lt;description&gt;synonyms and near synonyms&lt;/description&gt;
        &lt;memberRole memberType="sense" min="2" action="navigate"/&gt;
    &lt;/relationType&gt;
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "my-dictionary",
    "language": "de",
    "translationLanguages": ["en"],
    "entries": [{
        "id": "die-see",
        "headword": "See",
        "partsOfSpeech": ["n-fem"],
        "senses": [{
            "id": "die-see-1",
            "headwordTranslations": [{"text": "sea"}]
        }]
    }, {
        "id": "das-meer",
        "headword": "Meer",
        "partsOfSpeech": ["n-neut"],
        "senses": [{
            "id": "das-meer-1",
            "headwordTranslations": [{"text": "sea"}]
        }]
    }, {
        "id": "der-ozean",
        "headword": "OZean",
        "partsOfSpeech": ["n-masc"],
        "senses": [{
            "id": "der-ozean-1",
            "headwordTranslations": [{"text": "ocean"}]
        }]
    }],
    "relations": [{
        "type": "syns",
        "description": "words that mean sea and ocean",
        "members": [
          {"idref": "die-see-1"},
          {"idref": "das-meer-1"},
          {"idref": "der-ozean-1"}
        ]
    }],
    "relationTypes": [{
        "type": "syns",
        "description": "synonyms and near synonyms",
        "memberRoles": [{
            "memberType": "sense",
            "min": 2,
            "action": "navigate"
        }]
    }]
}
</programlisting>
                         </section>
                         <section>
                                                  <title>Suggested rendering for human users</title>
                                                  <blockquote>
                                                                           <para>
                                                                                                    <emphasis role="strong">See</emphasis>
                                                                                                    <emphasis>feminine noun</emphasis>
                                                                           </para>
                                                                           <itemizedlist>
                                                                                                    <listitem>
                                                                                                                             <para>sea <emphasis>same or similar meaning:</emphasis>
                                                                                                                                                      <emphasis role="strong">Meer</emphasis>, <emphasis role="strong">Ozean</emphasis>
                                                                                                                             </para>
                                                                                                    </listitem>
                                                                           </itemizedlist>
                                                  </blockquote>
                         </section>
                         

</section>
  <section id="ex15">

                         <title>Modelling variants</title>
                         <para>We have two entries in our lexicographic resource, one for the headword "colour" and one for the headword "color". We want to create a relation to represent the fact that these are spelling variants.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: my-dictionary
    language: en
    entry: colour
        headword: colour
        partOfSpeech: n
        label: europeanSpelling
        sense: colour-1
            definition: red, blue, yellow etc.
            example: What is your favourite colour?
    entry: color
        headword: color
        partOfSpeech: n
        label: americanSpelling
    relation: vars
        member: colour
        member: color
    relationType: vars
        description: variants, words which differ only in spelling
        memberRole:
            memberType: entry
            min: 2
            action: navigate
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="my-dictionary" language="en"&gt;
    &lt;entry id="colour"&gt;
        &lt;headword&gt;colour&lt;/headword&gt;
        &lt;partOfSpeech value="n"/&gt;
        &lt;label value="europeanSpelling"/&gt;
        &lt;sense id="colour-1"&gt;
            &lt;definition&gt;red, blue, yellow etc.&lt;/definition&gt;
            &lt;example&gt;&lt;text&gt;What is your favourite colour?&lt;/text&gt;&lt;/example&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;entry id="color"&gt;
        &lt;headword&gt;color&lt;/headword&gt;
        &lt;partOfSpeech value="n"/&gt;
        &lt;label value="americanSpelling"/&gt;
    &lt;/entry&gt;
    &lt;relation type="vars"&gt;
        &lt;member idref="colour"/&gt;
        &lt;member idref="color"/&gt;
    &lt;/relation&gt;
    &lt;relationType type="vars"&gt;
        &lt;description&gt;variants, words which differ only in spelling&lt;/description&gt;
        &lt;memberRole memberType="entry" min="2" action="navigate"/&gt;
    &lt;/relationType&gt;
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "my-dictionary",
    "language": "en",
    "entries": [{
        "id": "colour",
        "headword": "colour",
        "partsOfSpeech": ["n"],
        "labels": ["europeanSpelling"],
        "senses": [{
            "id": "colour-1",
            "definitions": [{"text": "red, blue, yellow etc."}],
            "examples": [{"text": "What is your favourite colour?"}]
        }]
    }, {
        "id": "color",
        "headword": "color",
        "partsOfSpeech": ["n"],
        "labels": ["americanSpelling"]
    }],
    "relations": [{
        "type": "vars",
        "members": [
          {"idref": "colour"},
          {"idref": "color"}
        ]
    }],
    "relationTypes": [{
        "type": "vars",
        "description": "variants, words which differ only in spelling",
        "memberRoles": [{
            "memberType": "entry",
            "min": 2,
            "action": "navigate"
        }]
    }]
}
</programlisting>
                         </section>
                         <section>
                                                  <title>Suggested rendering for human users</title>
                                                  <blockquote>
                                                                           <para>
                                                                                                    <emphasis role="strong">colour</emphasis>
                                                                                                    <emphasis>noun, European spelling</emphasis>
                                                                           </para>
                                                                           <itemizedlist>
                                                                                                    <listitem>
                                                                                                                             <para>red, blue, yellow etc. <emphasis>What is your favourite colour?</emphasis>
                                                                                                                             </para>
                                                                                                    </listitem>
                                                                           </itemizedlist>
                                                                           <para>see also: color</para>
                                                  </blockquote>
                         </section>
                         

</section>
  <section id="ex16">

                         <title>Modelling subsenses</title>
                         <para>We have an entry for the noun "colour" with four senses. We want to express the fact that senses number two and three are subsenses of sense number one, and should be displayed as such to human users.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: my-dictionary
    language: en
    entry: colour
        headword: colour
            sense: colour-1
                definition: red, blue, yellow etc.
                example: What is your favourite colour?
            sense: colour-2
                definition: not being black and white
                example: Back then owning a colour TV meant you were rich.
            sense: colour-3
                definition: a sign of a person's race
                example: We welcome people of all creeds and colours.
            sense: colour-4
                definition: interest or excitement
                example: Examples add colour to your writing.
    relation: subsensing
        member: colour-1
            role: supersense
        member: colour-2
            role: subsense
    relation: subsensing
        member: colour-1
            role: supersense
        member: colour-3
            role: subsense
    relationType: subsensing
        description: expresses the fact that a sense is a subsense of another sense
        scope: sameEntry
        memberRole: supersense
            memberType: sense
            min: 1
            max: 1
            action: none
        memberRole: subsense
            memberType: sense
            min: 1
            max: 1
            action: embed
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="my-dictionary" language="en"&gt;
    &lt;entry id="colour"&gt;
        &lt;headword&gt;colour&lt;/headword&gt;
        &lt;sense id="colour-1"&gt;
            &lt;definition&gt;red, blue, yellow etc.&lt;/definition&gt;
            &lt;example&gt;&lt;text&gt;What is your favourite colour?&lt;/text&gt;&lt;/example&gt;
        &lt;/sense&gt;
        &lt;sense id="colour-2"&gt;
            &lt;definition&gt;not being black and white&lt;/definition&gt;
            &lt;example&gt;&lt;text&gt;Back then owning a colour TV meant you were rich.&lt;/text&gt;&lt;/example&gt;
        &lt;/sense&gt;
        &lt;sense id="colour-3"&gt;
            &lt;definition&gt;a sign of a person's race&lt;/definition&gt;
            &lt;example&gt;&lt;text&gt;We welcome people of all creeds and colours.&lt;/text&gt;&lt;/example&gt;
        &lt;/sense&gt;
        &lt;sense id="colour-4"&gt;
            &lt;definition&gt;interest or excitement&lt;/definition&gt;
            &lt;example&gt;&lt;text&gt;Examples add colour to your writing.&lt;/text&gt;&lt;/example&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;relation type="subsensing"&gt;
        &lt;member idref="colour-1" role="supersense"/&gt;
        &lt;member idref="colour-2" role="subsense"/&gt;
    &lt;/relation&gt;
    &lt;relation type="subsensing"&gt;
        &lt;member idref="colour-1" role="supersense"/&gt;
        &lt;member idref="colour-3" role="subsense"/&gt;
    &lt;/relation&gt;
    &lt;relationType type="subsensing" scope="sameEntry"&gt;
        &lt;description&gt;
            expresses the fact that a sense is a subsense of another sense
        &lt;/description&gt;
        &lt;memberRole role="supersense" memberType="sense" min="1" max="1"
                    action="none"/&gt;
        &lt;memberRole role="subsense" memberType="sense" min="1" max="1"
                    action="embed"/&gt;
    &lt;/relationType&gt;
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "my-dictionary",
    "language": "en",
    "entries": [{
        "id": "colour",
        "headword": "colour",
        "senses": [{
            "id": "colour-1",
            "definitions": [{"text": "red, blue, yellow etc."}],
            "examples": [{"text": "What is your favourite colour?"}]
        }, {
            "id": "colour-2",
            "definitions": [{"text": "not being black and white"}],
            "examples": [{"text": "Back then owning a colour TV meant you were rich."}]
        }, {
            "id": "colour-3",
            "definitions": [{"text": "a sign of a person's race"}],
            "examples": [{"text": "We welcome people of all creeds and colours."}]
        }, {
            "id": "colour-4",
            "definitions": [{"text": "interest or excitement"}],
            "examples": [{"text": "Examples add colour to your writing."}]
        }]
    }],
    "relations": [{
        "type": "subsensing",
        "members": [
          {"role": "supersense", "idref": "colour-1"},
          {"role": "subsense", "idref": "colour-2"}
        ]
    }, {
        "type": "subsensing",
        "members": [
          {"role": "supersense", "idref": "colour-1"},
          {"role": "subsense", "idref": "colour-3"}
        ]
    }],
    "relationTypes": [{
        "type": "subsensing",
        "description": "expresses the fact that a sense is a subsense of another sense",
        "scope": "sameEntry",
        "memberRoles": [{
            "role": "supersense",
            "memberType": "sense",
            "min": 1,
            "max": 1,
            "action": "none"
        }, {
            "role": "subsense",
            "memberType": "sense",
            "min": 1,
            "max": 1,
            "action": "embed"
        }]
    }]
}
</programlisting>
    </section>
    <section>
        <title>Suggested rendering for human users</title>
        <blockquote>
           <para><emphasis role="strong">colour</emphasis></para>
           <orderedlist numeration="arabic" inheritnum="ignore" continuation="restarts">
                <listitem>
                    <para>red, blue, yellow etc.<emphasis>What is your favourite colour?</emphasis></para>
                    <orderedlist numeration="loweralpha" inheritnum="ignore" continuation="restarts">
                        <listitem>
                            <para>not being black and white <emphasis>Back then owning a colour TV meant you were rich.</emphasis></para>
                        </listitem>
                        <listitem>
                            <para>a sign of a person's race <emphasis>We welcome people of all creeds and colours.</emphasis></para>
                        </listitem>
                    </orderedlist>
                </listitem>
                <listitem>
                     <para>interest or excitement <emphasis>Examples add colour to your writing.</emphasis></para>
                </listitem>
           </orderedlist>
        </blockquote>
    </section>
                         

</section>
  <section id="ex17">

                         <title>Modelling subentries (at subsense level)</title>
                         <para>We have an entry for the adjective "safe" with two senses, and an entry for the multi-word expression "better safe than sorry" with one sense. We want to express the fact that the multi-word entry should appear under the first sense of "safe" as a subentry.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: my-dictionary
    language: en
    entry: safe
        headword: safe
        sense: safe-1
            indicator: protected from harm
            example: It isn't safe to park here.
        sense: safe-2
            indicator: not likely to cause harm
            example: Is the ride safe for a small child?
    entry: better-safe
        headword: better safe than sorry
        sense: better-safe-1
            definition: you should be careful even if it seems unnecessary
    relation: subentrying
        membership: safe-1
            role: container
        membership: better-safe
            role: subentry
    relationType: subentrying
        scope: sameResource
        memberRole: container
            memberType: sense
            min: 1
            max: 1
            action: navigate
        memberRole: subentry
            memberType: entry
            min: 1
            max: 1
            action: embed
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="my-dictionary" language="en"&gt;
    &lt;entry id="safe"&gt;
        &lt;headword&gt;safe&lt;/headword&gt;
        &lt;sense id="safe-1"&gt;
            &lt;indicator&gt;protected from harm&lt;/indicator&gt;
            &lt;example&gt;&lt;text&gt;It isn't safe to park here.&lt;/text&gt;&lt;/example&gt;
        &lt;/sense&gt;
        &lt;sense id="safe-2"&gt;
            &lt;indicator&gt;not likely to cause harm&lt;/indicator&gt;
            &lt;example&gt;&lt;text&gt;Is the ride safe for a small child?&lt;/text&gt;&lt;/example&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;entry id="better-safe"&gt;
        &lt;headword&gt;better safe than sorry&lt;/headword&gt;
        &lt;sense id="better-safe-1"&gt;
            &lt;definition&gt;
                &lt;text&gt;you should be careful even if it seems unnecessary&lt;/text&gt;
            &lt;/definition&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;relation type="subentrying"&gt;
        &lt;member idref="safe-1" role="container"/&gt;
        &lt;member idref="better-safe" role="subentry"/&gt;
    &lt;/relation&gt;
    &lt;relationType type="subentrying" scope="sameResource"&gt;
        &lt;memberRole role="container" memberType="sense" min="1" max="1"
                    action="navigate"/&gt;
        &lt;memberRole role="subentry" memberType="entry" min="1" max="1"
                    action="embed"/&gt;
    &lt;/relationType&gt;
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "my-dictionary",
    "language": "en",
    "entries": [{
        "id": "safe",
        "headword": "safe",
        "senses": [{
            "id": "safe-1",
            "indicator": "protected from harm",
            "examples": [{"text": "It isn't safe to park here."}]
        }, {
            "id": "safe-2",
            "indicator": "not likely to cause harm",
            "examples": [{"text": "Is the ride safe for a small child?"}]
        }]
    }, {
        "id": "better-safe",
        "headword": "better safe than sorry",
        "senses": [{
            "id": "better-safe-1",
            "definitions": [{
                "text": "you should be careful even if it seems unnecessary"
            }]
        }]
    }],
    "relations": [{
        "type": "subentrying",
        "members": [
          {"role": "container", "idref": "safe-1"},
          {"role": "subentry", "idref": "better-safe"}
        ]
    }],
    "relationTypes": [{
        "type": "subentrying",
        "scope": "sameResource",
        "memberRoles": [{
            "role": "container",
            "memberType": "sense",
            "min": 1,
            "max": 1,
            "action": "navigate"
        }, {
            "role": "subentry",
            "memberType": "entry",
            "min": 1,
            "max": 1,
            "action": "embed"
        }]
    }]
}
</programlisting>
                         </section>
                         <section>
                                                  <title>Suggested rendering for human users</title>
                                                  <blockquote>
                                                                           <para>
                                                                                                    <emphasis role="strong">safe</emphasis>
                                                                           </para>
                                                                           <itemizedlist>
                                                                                                    <listitem>
                                                                                                                             <para>protected from harm: <emphasis>It isn't safe to park here.</emphasis>
                                                                                                                             </para>
                                                                                                                             <itemizedlist>
                                                                                                                                                      <listitem>
                                                                                                                                                                               <para>
                                                                                                                                                                                                        <emphasis role="strong">better safe than sorry</emphasis> you should be careful even if it seems unnecessary</para>
                                                                                                                                                      </listitem>
                                                                                                                             </itemizedlist>
                                                                                                    </listitem>
                                                                                                    <listitem>
                                                                                                                             <para>not likely to cause harm:  <emphasis>Is the ride safe for a small child?</emphasis>
                                                                                                                             </para>
                                                                                                    </listitem>
                                                                           </itemizedlist>
                                                                           <para>
                                                                                                    <emphasis role="strong">better safe than sorry</emphasis>
                                                                           </para>
                                                                           <itemizedlist>
                                                                                                    <listitem>
                                                                                                                             <para>you should be careful even if it seems unnecessary</para>
                                                                                                    </listitem>
                                                                           </itemizedlist>
                                                                           <para>see also: safe</para>
                                                  </blockquote>
                         </section>
                         

</section>
  <section id="ex18">

                         <title>Modelling subentries (at sense level)</title>
                         <para>We have an entry for the word "bible" and another entry for the expression "the Bible". We want to make sure that, when a human user is viewing the entry for "bible", the entry for "the Bible" is shown as a subentry of it, as if it were its first sense.</para>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
lexicographicResource: my-dictionary
    language: en
    entry: the-bible
        headword: the Bible
        Sense: the-bible-1
            definition: the book considered holy by Christians
    entry: bible
        headword: bible
        sense: bible-1
        sense: bible-2
            definition: a book considered important for a subject
    relation: subentrying
        member: bible-1
            role: container
        member: the-bible
            role: subentry
    relationType: subentrying
        scope: sameResource
        memberRole: container
            memberType: sense
            min: 1
            max: 1
            action: navigate
        memberRole: subentry
            memberType: entry
            min: 1
            max: 1
            action: embed
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;lexicographicResource id="my-dictionary" language="en"&gt;
    &lt;entry id="the-bible"&gt;
        &lt;headword&gt;the Bible&lt;/headword&gt;
        &lt;sense id="the-bible-1"&gt;
            &lt;definition&gt;
                &lt;text&gt;the book considered holy by Christians&lt;/text&gt;
            &lt;/definition&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;entry id="bible"&gt;
        &lt;headword&gt;bible&lt;/headword&gt;
        &lt;sense id="bible-1"/&gt;
        &lt;sense id="bible-2"&gt;
            &lt;definition&gt;
                &lt;text&gt;a book considered important for a subject&lt;/text&gt;
            &lt;/definition&gt;
        &lt;/sense&gt;
    &lt;/entry&gt;
    &lt;relation type="subentrying"&gt;
        &lt;member idref="bible-1" role="container"/&gt;
        &lt;member idref="the-bible" role="subentry"/&gt;
    &lt;/relation&gt;
    &lt;relationType type="subentrying" scope="sameResource"&gt;
        &lt;memberRole role="container" memberType="sense" min="1" max="1"
                    action="navigate"/&gt;
        &lt;memberRole role="subentry" memberType="entry" min="1" max="1"
                    action="embed"/&gt;
    &lt;/relationType&gt;
&lt;/lexicographicResource&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
    "id": "my-dictionary",
    "language": "en",
    "entries": [{
        "id": "the-bible",
        "headword": "the Bible",
        "senses": [{
            "id": "the-bible-1",
            "definitions": [{"text": "the book considered holy by Christians"}]
        }]
    }, {
        "id": "bible",
        "headword": "bible",
        "senses": [{
            "id": "bible-1"
        }, {
            "id": "bible-2",
            "definitions": [{"text": "a book considered important for a subject"}]
        }]
    }],
    "relations": [{
        "type": "subentrying",
        "members": [
          {"role": "container", "idref": "bible-1"},
          {"role": "subentry", "idref": "the-bible"}
        ]
    }],
    "relationTypes": [{
        "type": "subentrying",
        "scope": "sameResource",
        "memberRoles": [{
            "role": "container",
            "memberType": "sense",
            "min": 1,
            "max": 1,
            "action": "navigate"
        }, {
            "role": "subentry",
            "memberType": "entry",
            "min": 1,
            "max": 1,
            "action": "embed"
        }]
    }]
}
</programlisting>
                         </section>
                         <section>
                                                  <title>Suggested rendering for human users</title>
                                                  <blockquote>
                                                                           <para>
                                                                                                    <emphasis role="strong">bible</emphasis>
                                                                           </para>
                                                                           <orderedlist numeration="arabic" inheritnum="ignore" continuation="restarts">
                                                                                                    <listitem>
                                                                                                                             <para>
                                                                                                                                                      <emphasis role="strong">the Bible</emphasis> the book considered holy by Christians</para>
                                                                                                    </listitem>
                                                                                                    <listitem>
                                                                                                                             <para>a book considered important for a subject</para>
                                                                                                    </listitem>
                                                                           </orderedlist>
                                                  </blockquote>
                                                  <para>Suggeted rendering of the entry "the Bible" for human users:</para>
                                                  <blockquote>
                                                                           <para>
                                                                                                    <emphasis role="strong">the Bible</emphasis>
                                                                           </para>
                                                                           <itemizedlist>
                                                                                                    <listitem>
                                                                                                                             <para>the book considered holy by Christians</para>
                                                                                                    </listitem>
                                                                           </itemizedlist>
                                                                           <para>see also: bible</para>
                                                  </blockquote>
                         </section>
                         

</section>
  <section id="ex19">

                         <title>Using <code>placeholderMarker</code></title>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: continue-studies
    headword: continue your studies
        placeholderMarker: your
    sense: ...
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="continue-studies"&gt;
    &lt;headword&gt;
        continue &lt;placeholderMarker&gt;your&lt;/placeholderMarker&gt; studies
    &lt;/headword&gt;
    &lt;sense.../&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
  "id": "continue-studies",
  "headword": "continue your studies",
  "placeholderMarkers": [
     {"startIndex": 9, "endIndex": 13}
  ],
  "senses": [...]
}
</programlisting>
                         </section>
                         

</section>
  <section id="ex20">

                         <title>Using <code>placeholderMarker</code> in a bilingual lexicographic resource</title>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: beat-up
    headword: beat sb. up
        placeholderMarker: sb.
    sense: beat-up-1
        headwordTranslation: jemanden verprügeln
            placeholderMarker: jemanden
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="beat-up"&gt;
    &lt;headword&gt;
        beat &lt;placeholderMarker&gt;sb.&lt;/placeholderMarker&gt; up
    &lt;/headword&gt;
    &lt;sense id="beat-up-1"&gt;
      &lt;headwordTranslation&gt;
        &lt;text&gt;
            &lt;placeholderMarker&gt;jemanden&lt;/placeholderMarker&gt; verprügeln
        &lt;/text&gt;
      &lt;/headwordTranslation&gt;
    &lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
  "id": "beat-up",
  "headword": "beat sb. up",
  "placeholderMarkers": [
      {"startIndex": 5, "endIndex": 8}
  ],
  "senses": [{
    "id": "beat-up-1",
    "headwordTranslations": [{
      "text": "jemanden verprügeln",
      "placeholderMarkers": [
          {"startIndex": 0, "endIndex": 8}
      ],
    }]
  }]
}
</programlisting>
                         </section>

</section>
  <section id="ex21">

                         <title>Using <code>headwordMarker</code></title>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: autopsy
    headword: autopsy
    sense: autopsy-1
        headwordTranslation: pitva
        example: The coroner performed an autopsy.
            headwordMarker: autopsy
            exampleTranslation: Koroner provedl pitvu.
                headwordMarker: pitvu
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="autopsy"&gt;
    &lt;headword&gt;autopsy&lt;/headword&gt;
    &lt;sense id="autopsy-1"&gt;
        &lt;headwordTranslation&gt;&lt;text&gt;pitva&lt;/text&gt;&lt;/headwordTranslation&gt;
        &lt;example&gt;
            &lt;text&gt;
                The coroner performed an &lt;headwordMarker&gt;autopsy&lt;/headwordMarker&gt;.
            &lt;/text&gt;
            &lt;exampleTranslation&gt;
                &lt;text&gt;
                    Koroner provedl &lt;headwordMarker&gt;pitvu&lt;/headwordMarker&gt;.
                &lt;/text&gt;
            &lt;/exampleTranslation&gt;
        &lt;/example&gt;
    &lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
  "id": "autopsy",
  "headword": "autopsy",
  "senses": [{
    "id": "autopsy-1",
    "headwordTranslations": [{"text": "pitva"}],
    "examples": [{
      "text": "The coroner performed an autopsy.",
      "headwordMarkers": [
        {"startIndex": 25, "endIndex": 32}
      ],
      "exampleTranslations": [{
        "text": "Koroner provedl pitvu.",
        "headwordMarkers": [
          {"startIndex": 16, "endIndex": 21}
        ]
      }]
    }]
  }]
}
</programlisting>
                         </section>
                         

</section>
  <section id="ex22">

                         <title>Using <code>itemMarker</code></title>
                         <section>
                                                  <title>NVH</title>
                                                  <programlisting format="linespecific">
entry: autopsy
    headword: autopsy
    sense: autopsy-1
        headwordTranslation: pitva
        example: The coroner performed an autopsy.
            headwordMarker: autopsy
            itemMarker: performed
                lemma: perform
            exampleTranslation: Koroner provedl pitvu.
                headwordMarker: pitvu
                itemMarker: provedl
                    lemma: provést
</programlisting>
                         </section>
                         <section>
                                                  <title>XML</title>
                                                  <programlisting format="linespecific">
&lt;entry id="autopsy"&gt;
    &lt;headword&gt;autopsy&lt;/headword&gt;
    &lt;sense id="autopsy-1"&gt;
        &lt;headwordTranslation&gt;&lt;text&gt;pitva&lt;/text&gt;&lt;/headwordTranslation&gt;
        &lt;example&gt;
            &lt;text&gt;
                The coroner &lt;itemMarker lemma="perform"&gt;performed&lt;/itemMarker&gt;
                an &lt;headwordMarker&gt;autopsy&lt;/headwordMarker&gt;.
            &lt;/text&gt;
            &lt;exampleTranslation&gt;
                &lt;text&gt;
                    Koroner &lt;itemMarker lemma="provést"&gt;provedl&lt;/itemMarker&gt;
                    &lt;headwordMarker&gt;pitvu&lt;/headwordMarker&gt;.
                &lt;/text&gt;
            &lt;/exampleTranslation&gt;
        &lt;/example&gt;
    &lt;/sense&gt;
&lt;/entry&gt;
</programlisting>
                         </section>
                         <section>
                                                  <title>JSON</title>
                                                  <programlisting format="linespecific">
{
  "id": "autopsy",
  "headword": "autopsy",
  "senses": [{
    "id": "autopsy-1",
    "headwordTranslations": [{"text": "pitva"}],
    "examples": [{
      "text": "The coroner performed an autopsy.",
      "headwordMarkers": [
        {"startIndex": 25, "endIndex": 32}
      ],
      "itemMarkers": [
        {"startIndex": 12, "endIndex": 21, "lemma": "perform"}
      ],
      "exampleTranslations": [{
        "text": "Koroner provedl pitvu.",
        "headwordMarkers": [
          {"startIndex": 16, "endIndex": 21}
        ],
        "itemMarkers": [
          {"startIndex": 8, "endIndex": 15, "lemma": "provést"}
        ],
      }]
    }]
  }]
}
</programlisting>
                         </section>
</section>
</section>
  
  <!--  implementations  -->
  <section id="XML_implementation" role="normative | informative">
  <title>DMLex XML implementation</title>

  <section>
    <title>Implementation principles</title>
    <para>The XML implementation of DMLex shown in this document follows these priciples:</para>
    <itemizedlist>
      <listitem>
        <para>The top-level <code>lexicographicResource</code> object is implemented as an XML element.</para>
      </listitem>
      <listitem>
        <para>All other objects are implemented as XML attributes of their parents, unless:</para>
        <itemizedlist>
          <listitem>
            <para>the object has an arity other than <code>(0..1)</code> and <code>(1..1)</code>
            </para>
          </listitem>
          <listitem>
            <para>or the object can have child objects</para>
          </listitem>
          <listitem>
            <para>or the object's value is human-readable text, such as a headword or a definition.</para>
          </listitem>
        </itemizedlist>
        <para>In such cases the object is implemented as a child XML element of its parent.</para>
      </listitem>
    </itemizedlist>
  </section>
  
  <section>
    <title>DMLex namespaces and validation artifacts for its XML serialization</title>
    <para>TBD...</para>
    <!-- <para>This
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>normative/informative<?oxy_custom_end?>
      XML serialization of DMLex Version &version; makes use of all DMLex namespaces (both core and
      modules) namespaces: <code><ulink
        url="http://docs.oasis-open.org/lexidma/ns/dmlex-&cschversion;"
        >http://docs.oasis-open.org/lexidma/ns/dmlex-&cschversion;</ulink></code>, and
      <code>urn:oasis:names:tc:lexidma:module_01:1.0</code>, and
      <code><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>other namespace
        identifiers as necessary<?oxy_custom_end?></code>. NAMESPACE SUPPORT IN XML WILL NEED </para>
    <para>Validation artifacts
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[specify type of
      artifacts if any available at all]<?oxy_custom_end?> for this RDF serialization are available
      at <ulink url="&this-loc;/schemas/filename1.filetype1"
        >&this-loc;/schemas/filename1.filetype1</ulink>, <ulink
          url="&this-loc;/schemas/filename2.filetype1">&this-loc;/schemas/filename2.filetype1</ulink>,
      and <ulink url="&this-loc;/schemas/filename1.filetype2"
        >&this-loc;/schemas/filename1.filetype2</ulink>. </para>
    <note>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[Potential note
        content]<?oxy_custom_end?></para>
      <para>. </para>
    </note> -->
  </section>

  <section id="xml_lexicographicResource">
    <title>Element: <literal moreinfo="none">&lt;lexicographicResource&gt;</literal></title>
    <para>Implements the <link linkend="core_lexicographicResource">lexicographicResource</link> data type.</para>

    <bridgehead>Attributes:</bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">@id</literal> <glossterm>required</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">@title</literal> <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">@uri</literal> <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">@language</literal> <glossterm>required</glossterm></para>
        </listitem>
    </itemizedlist>
    
    <bridgehead>Child elements</bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_entry">&lt;entry&gt;</link></literal> zero or more</para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_tag">&lt;tag&gt;</link></literal> zero or more</para>
        </listitem>
    </itemizedlist>
    
    <bridgehead>Child elements if implementing the <link linkend="xlingual">Crosslingual Module</link></bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_translationLanguage">&lt;translationLanguage&gt;</link></literal> one or more</para>
        </listitem>
    </itemizedlist>
            
    <bridgehead>Child elements if implementing the <link linkend="linking">Linking Module</link></bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_relation">&lt;relation&gt;</link></literal> zero or more </para>        </listitem>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_relationType">&lt;relationType&gt;</link></literal> zero or more</para>
        </listitem>
    </itemizedlist>
    
</section>
  <section id="xml_entry">
    <title>Element: <literal moreinfo="none">&lt;entry&gt;</literal></title>
    <para>Implements the <link linkend="core_entry">entry</link> data type.</para>

    <bridgehead>Attributes:</bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">@id</literal> <glossterm>required</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">@homographNumber</literal> <glossterm>optional</glossterm></para>
        </listitem>
    </itemizedlist>
    
    <bridgehead>Child elements</bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">&lt;headword&gt;</literal> <glossterm>required</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_partOfSpeech">&lt;partOfSpeech&gt;</link></literal> zero or more</para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_label">&lt;label&gt;</link></literal> zero or more</para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_pronunciation">&lt;pronunciation&gt;</link></literal> zero or more</para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_inflectedForm">&lt;inflectedForm&gt;</link></literal> zero or more</para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_sense">&lt;sense&gt;</link></literal> zero or more</para>
        </listitem>
    </itemizedlist>
    
    <bridgehead>Child elements if implementing the <link linkend="etymology">Etymology Module</link></bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none"><link linkend="xml_etymology">&lt;etymology&gt;</link></literal> zero or more</para>
        </listitem>
    </itemizedlist>
    
</section>
  





</section>
  <section id="JSON_implementation" role="normative | informative">
  <title>DMLex JSON implementation</title>

  <section>
    <title>Implementation principles</title>
    <para>The XML implementation of DMLex shown in this document follows these priciples:</para>
    <itemizedlist>
      <listitem>
        <para>The top-level <code>lexicographicResource</code> object is implemented as a JSON object: <code>{...}</code>.</para>
      </listitem>
      <listitem>
        <para>All other objects are implemented as JSON name-value pairs inside their parent JSON object: <code>{"name": ...}</code>.</para>
      </listitem>
      <listitem>
        <para>The values of objects are implemented:</para>
        <itemizedlist>
          <listitem>
            <para>If the object has an arity of <code>(0..1)</code> or <code>(1..1)</code>:</para>
            <itemizedlist>
              <listitem>
                <para>If the object cannot have any child objects: as a string or number.</para>
              </listitem>
              <listitem>
                <para>If the object can have child objects: as a JSON object.</para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>If the object has any other arity:</para>
            <itemizedlist>
              <listitem>
                <para>If the object cannot have any child objects: as an array of strings or numbers.</para>
              </listitem>
              <listitem>
                <para>If the object can have child objects: as an array of JSON objects.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>

  <section id="json_lexicographicResource">
    <title>Class: <literal moreinfo="none">lexicographicResource</literal></title>
    <para>Implements the <link linkend="core_lexicographicResource">lexicographicResource</link> data type.</para>

    <bridgehead>Type</bridgehead>
    <para>JSON object: <literal moreinfo="none">{...}</literal></para>

    <bridgehead>Members</bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">"id"</literal> string <glossterm>required</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"title"</literal> string <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"uri"</literal> string <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"language"</literal> string <glossterm>required</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"entries"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_entry">entry</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"tags"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_tag">tag</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
    </itemizedlist>
    
    <bridgehead>Members if implementing the <link linkend="xlingual">Crosslingual Module</link></bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">"translationLanguages"</literal> array of one or more <literal moreinfo="none"><link linkend="json_translationLanguage">translationLanguage</link></literal> objects, <glossterm>required</glossterm></para>
        </listitem>
    </itemizedlist>
    
    <bridgehead>Members if implementing the <link linkend="linking">Linking Module</link></bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">"relations"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_relation">relation</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"relationTypes"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_relationType">relationType</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
    </itemizedlist>
    
</section>
  <section id="json_entry">
    <title>Class: <literal moreinfo="none">entry</literal></title>
    <para>Implements the <link linkend="core_entry">entry</link> data type.</para>

    <bridgehead>Type</bridgehead>
    <para>JSON object: <literal moreinfo="none">{...}</literal></para>

    <bridgehead>Members</bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">"id"</literal> string <glossterm>required</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"headword"</literal> (string) <glossterm>required</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"homographNumber"</literal> string <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"partsOfSpeech"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_partOfSpeech">partOfSpeech</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"labels"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_label">label</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"pronunciations"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_pronunciation">pronunciation</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"inflectedForms"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_inflectedForm">inflectedForm</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">"senses"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_sense">sense</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
    </itemizedlist>
    
    <bridgehead>Members if implementing the <link linkend="etymology">Etymology Module</link></bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">"etymologies"</literal> array of zero or more <literal moreinfo="none"><link linkend="json_etymology">etymology</link></literal> objects, <glossterm>optional</glossterm></para>
        </listitem>
    </itemizedlist>
    
</section>
  



</section>
  <section id="RDB_implementation" role="normative | informative">
  <title>DMLex relational database implementation</title>
  
  <section>
    <title>Implementation principles</title>
    <para>The SQL implementation of DMLex shown in this document follows these priciples:</para>
    <itemizedlist>
      <listitem>
        <para>The <code>lexicographicResource</code> object is implemented as table. (Alternatively, it can left unimplemented if the database is going to contain only one lexicographic resource.)</para>
      </listitem>
      <listitem>
        <para>Other objects with an arity other than <code>(0..1)</code> and <code>(1..1)</code> are implemented as tables.</para>
      </listitem>
      <listitem>
        <para>The values of objects, and objects with an arity of <code>(0..1)</code> or <code>(1..1)</code> are implemented as columns in those tables.</para>
      </listitem>
      <listitem>
        <para>The parent-child relation is implemented as a one-to-many relation between tables.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="rdb_lexicographicResources">
    <title>Table: <literal moreinfo="none">lexicographicResources</literal></title>
    <para>Implements the <link linkend="core_lexicographicResource">lexicographicResource</link>
        data type.</para>

    <bridgehead>Columns</bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">id int primary key</literal></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">title varchar(255)</literal></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">uri varchar(255)</literal></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">language varchar(10)</literal></para>
        </listitem>
    </itemizedlist>

    <bridgehead>Comment</bridgehead>
    <para> If the implementation contains only one lexicographic resource, then the
            <literal moreinfo="none">lexicographicResource</literal> table <glossterm>may</glossterm> remain
        unimplemented. </para>

</section>
  <section id="rdb_entriez">
    <title>Table: <literal moreinfo="none">entries</literal></title>
    <para>Implements the <link linkend="core_entry">entry</link> data type.</para>

    <bridgehead>Columns</bridgehead>
    <itemizedlist>
        <listitem>
            <para><literal moreinfo="none">lexicographicResourceID int foreign key references
                    lexicographicResource(id)</literal></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">id int</literal>, primary key</para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">headword varchar(255)</literal></para>
        </listitem>
        <listitem>
            <para><literal moreinfo="none">homographNumber int</literal></para>
        </listitem>
    </itemizedlist>

    <bridgehead>Comment</bridgehead>
    <para> If the implementation contains only one lexicographic resource, then the column
            <literal moreinfo="none">lexicographicResourceID</literal>
        <glossterm>may</glossterm> remain unimplemented. </para>

</section>
  

</section>

  <appendix role="normative" id="references">
    <title>References</title>
    <para>This appendix contains the normative and informative references that are used in this
      document. Normative references are specific (identified by date of publication and/or edition
      number or Version number) and Informative references are either specific or
      non-specific.</para>
    <para>While any hyperlinks included in this appendix were valid at the time of publication,
      OASIS cannot guarantee their long-term validity.</para>
    <section id="normativeReferences" role="normative">
      <title>Normative references</title>
      <para>The following documents are referenced in such a way that some or all of their content
        constitutes requirements of this document.
        <!-- note that at least one paragraph (and it can be empty) is needed to satisfy the DocBook document model -->
      </para>
      <bibliography>
        <title/>
        <bibliomixed id="bcp14">
          <abbrev>BCP 14</abbrev> is a concatenation of [RFC 2119] and [RFC 8174] </bibliomixed>
        <bibliomixed id="rfc2119"><abbrev>RFC 2119</abbrev> S. Bradner, <title>Key words for use in
            RFCs to Indicate Requirement Levels</title>, <citetitle>
            <ulink url="https://www.ietf.org/rfc/rfc2119.txt">https://www.ietf.org/rfc/rfc2119.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 2119, March 1997.</bibliomixed>
        <bibliomixed id="rfc8174"><abbrev>RFC 8174</abbrev> B. Leiba, <title>Ambiguity of Uppercase
            vs Lowercase in RFC 2119 Key Words</title>, <citetitle>
            <ulink url="https://www.ietf.org/rfc/rfc8174.txt">https://www.ietf.org/rfc/rfc8174.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 8174, May 2017.</bibliomixed>
        <bibliomixed id="bcp47"><abbrev>BCP 47</abbrev> M. Davis, <title>Tags for Identifying
            Languages</title>, <citetitle>
            <ulink url="http://tools.ietf.org/html/bcp47">http://tools.ietf.org/html/bcp47</ulink>
          </citetitle> IETF (Internet Engineering Task Force).</bibliomixed>
        <bibliomixed id="rfc3552"><abbrev>RFC 3552</abbrev> R. Escrola, B. Korver, <title>Guidelines for Writing RFC Text on Security Considerations</title>, <citetitle>
            <ulink url="https://www.tools.ietf.org/rfc/rfc3552.txt">https://www.tools.ietf.org/rfc/rfc3552.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 3552, July 2003.</bibliomixed>
        <bibliomixed id="exampleid"><abbrev><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>EXAMPLE_ABBREV</abbrev>
          N. Surname, A. Surname, <title>Exampe Title</title>, <citetitle><ulink url="example.org/citetitle">example.org/citetitle</ulink>Example
          Citetitle</citetitle>, Month dd, yyyy.<?oxy_custom_end ?></bibliomixed>
        <bibliomixed id="ITS20"><abbrev>ITS</abbrev> David Filip, Shaun McCance, Dave Lewis,
          Christian Lieske, Arle Lommel, Jirka Kosek, Felix Sasaki, Yves Savourel
            <title>Internationalization Tag Set (ITS) Version 2.0</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/its20/">http://www.w3.org/TR/its20/</ulink>
          </citetitle> W3C Recommendation 29 October 2013.</bibliomixed>
        <bibliomixed><abbrev>JSON</abbrev>
          <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>, <citetitle>
            <ulink url="https://tools.ietf.org/html/rfc8259">https://tools.ietf.org/html/rfc8259</ulink>
          </citetitle> IETF RFC 8259 December 2017. </bibliomixed>
        <bibliomixed id="bib_datetime"><abbrev>NOTE-datetime</abbrev> M. Wolf, C. Wicksteed,
            <title>Date and Time Formats</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/NOTE-datetime">http://www.w3.org/TR/NOTE-datetime</ulink>
          </citetitle> W3C Note, 15th September 1997.</bibliomixed>
        <bibliomixed id="NVDL"><abbrev>NVDL</abbrev> International Standards Organization,
            <title>ISO/IEC 19757-4, Information Technology - Document Schema Definition Languages
            (DSDL) - Part 4: Namespace-based Validation Dispatching Language (NVDL)</title>, <citetitle>
            <ulink url="http://standards.iso.org/ittf/PubliclyAvailableStandards/c038615_ISO_IEC_19757-4_2006(E).zip">
              http://standards.iso.org/ittf/PubliclyAvailableStandards/c038615_ISO_IEC_19757-4_2006(E).zip</ulink>
          </citetitle> ISO, June 1, 2006.</bibliomixed>
        <bibliomixed id="rfc3987"><abbrev>RFC 3987</abbrev> M. Duerst and M. Suignard,
            <title>Internationalized Resource Identifiers (IRIs)</title>, <citetitle>
            <ulink url="https://www.ietf.org/rfc/rfc3987.txt">https://www.ietf.org/rfc/rfc3987.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 3987, January 2005.</bibliomixed>
        <bibliomixed id="rfc7303"><abbrev>RFC 7303</abbrev> H. Thompson and C. Lilley, <title>XML
            Media Types</title>, <citetitle>
            <ulink url="https://www.tools.ietf.org/html/rfc7303">
              https://www.tools.ietf.org/html/rfc7303</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 7303, July 2014.</bibliomixed>
        <bibliomixed id="Schematron"><abbrev>Schematron</abbrev> International Standards
          Organization, <title>ISO/IEC 19757-3, Information Technology - Document Schema Definition
            Languages (DSDL) - Part 3: Rule-Based Validation — Schematron (Second Edition)</title>, <citetitle>
            <ulink url="http://standards.iso.org/ittf/PubliclyAvailableStandards/c055982_ISO_IEC_19757-3_2016.zip">
              http://standards.iso.org/ittf/PubliclyAvailableStandards/c055982_ISO_IEC_19757-3_2016.zip</ulink>
          </citetitle> ISO, January 15, 2016.</bibliomixed>
        <bibliomixed id="uax9"><abbrev>UAX #9</abbrev> M. Davis, A. Lanin, A. Glass, <title>UNICODE
            BIDIRECTIONAL ALGORITHM</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr9/tr9-35.html">http://www.unicode.org/reports/tr9/tr9-35.html</ulink>
          </citetitle> Unicode Bidirectional Algorithm, May 18, 2016.</bibliomixed>
        <bibliomixed id="uax15"><abbrev>UAX #15</abbrev> M. Davis, K. Whistler, <title>UNICODE
            NORMALIZATION FORMS</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr15/tr15-44.html">http://www.unicode.org/reports/tr15/tr15-44.html</ulink>
          </citetitle> Unicode Normalization Forms, February 24, 2016.</bibliomixed>
        <bibliomixed id="Unicode"><abbrev>Unicode</abbrev> The Unicode Consortium, <title>The
            Unicode Standard</title>, <citetitle>
            <ulink url="http://www.unicode.org/versions/Unicode9.0.0/">http://www.unicode.org/versions/Unicode9.0.0/</ulink>
          </citetitle> Mountain View, CA: The Unicode Consortium, June 21, 2016.</bibliomixed>
        <bibliomixed id="XLIFF21"><abbrev>XLIFF 2.1</abbrev> David Filip, Tom Comerford, Soroush
          Saadatfar, Felix Sasaki, and Yves Savourel, eds. <title>XLIFF Version 2.0</title>, <citetitle>
            <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html</ulink>
          </citetitle> OASIS Standard 13 February 2018 </bibliomixed>
        <bibliomixed id="bib_XML"><abbrev>XML</abbrev> W3C, <title>Extensible Markup Language (XML)
            1.0</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/xml/">http://www.w3.org/TR/xml/</ulink>
          </citetitle> (Fifth Edition) W3C Recommendation 26 November 2008.</bibliomixed>
        <bibliomixed id="xml_namespace"><abbrev>XML namespace</abbrev> W3C, <title>Schema document
            for namespace http://www.w3.org/XML/1998/namespace</title>
          <citetitle><ulink url="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</ulink></citetitle> [<edition><ulink url="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</ulink>]</edition>. at <edition><ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd</ulink></edition>
          in this distribution</bibliomixed>
        <bibliomixed id="XMLCatalogs"><abbrev>XML Catalogs</abbrev> Norman Walsh, <title>XML
            Catalogs</title>, <citetitle>
            <ulink url="https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html">https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html</ulink>
          </citetitle> OASIS Standard V1.1, 07 October 2005.</bibliomixed>
        <bibliomixed id="XMLSchema"><abbrev>XML Schema</abbrev> W3C, <title>XML Schema</title>,
            <citetitle> refers to the two part standard comprising <link linkend="XMLSchema1">[XML
              Schema Structures]</link> and <link linkend="XMLSchema2">[XML Schema Datatypes]</link>
          </citetitle> (Second Editions) W3C Recommendations 28 October 2004.</bibliomixed>
        <bibliomixed id="XMLSchema2"><abbrev>XML Schema Datatypes</abbrev> W3C, <title>XML Schema
            Part 2: Datatypes</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</ulink>
          </citetitle> (Second Edition) W3C Recommendation 28 October 2004.</bibliomixed>
        <bibliomixed id="XMLSchema1"><abbrev>XML Schema Structures</abbrev> W3C, <title>XML Schema
            Part 1: Structures</title>, <citetitle>
            <ulink url="https://www.w3.org/TR/xmlschema-1/">https://www.w3.org/TR/xmlschema-1/</ulink>
          </citetitle> (Second Edition) W3C Recommendation 28 October 2004.</bibliomixed>
      </bibliography>
    </section>
    <section role="informative" id="informativeReferences">
      <title>Informative references</title>
      <para>The following referenced documents are not required for the application of this document
        but may assist the reader with regard to a particular subject area.
        <!-- note that at least one paragraph (and it can be empty) is needed to satisfy the DocBook document model -->
      </para>
      <bibliography>
        <title/>
        <bibliomixed id="biblio_ldml"><abbrev>LDML</abbrev>
          <title>Unicode Locale Data Markup Language</title>
          <citetitle>
            <ulink url="http://unicode.org/reports/tr35/">http://unicode.org/reports/tr35/</ulink>
          </citetitle></bibliomixed>
        <bibliomixed id="uax29"><abbrev>UAX #29</abbrev> M. Davis, <title>UNICODE TEXT
            SEGMENTATION</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr29/">http://www.unicode.org/reports/tr29/</ulink>
          </citetitle> Unicode text Segmentation.</bibliomixed>
      </bibliography>
    </section>
  </appendix>
  <appendix role="informative" id="coreValidation">
    <title>Machine Readable Validation Artifacts</title>
    <para>CURRENTLY NO VALIDATION ARTIFACTS FORESEEN FOR THE OM.. JUST FOR SERIALIZATIONS</para>
    <para> MAY LIST CONFORMANT ARTIFACTS FOR SPECIFIC SERILIZATIONS AT A LATER STAGE </para>
    <!-- 
      <orderedlist>
        <listitem id="CoreSchema">
          <para><firstterm>DMLex Core</firstterm> <link linkend="XMLSchema">[XML Schema]</link>,</para>
          <para><ulink url="&this-loc;/schemas/dmlex&-cschversion;.xsd"
            >&this-loc;/schemas/dmllex-&cschversion;.xsd</ulink></para>

        </listitem>
        <listitem id="DMLexCatalog">
          <para><link linkend="XMLCatalogs">[XML Catalog]</link> of <firstterm>DMLex-defined</firstterm> XML Schemas,</para>
          <para><ulink url="&this-loc;/schemas/catalog.xml"
            >&this-loc;/schemas/catalog.xml</ulink></para>
        </listitem>
        <listitem id="NVDL">
          <para>Master <link linkend="NVDL">[NVDL]</link> file governing validation of all <firstterm>DMLex-defined</firstterm>
            namespaces by XML Schemas, Schematron Schemas and other rules if and as required,</para>
          <para><ulink url="&this-loc;/schemas/advanced_validation.nvdl.xml"
            >&this-loc;/schemas/advanced_validation.nvdl</ulink></para>
        </listitem>
        <listitem id="CoreSchematron">
          <para><firstterm>DMLex Core</firstterm> <link linkend="Schematron">[Schematron]</link> Schema, </para>
          <para><ulink url="&this-loc;/schemas/dmlex-&cschversion;.sch"
            >&this-loc;/schemas/dmlex-&cschversion;.sch</ulink></para>
        </listitem>
        <listitem>
          <para>XML and Schematron Schemas of <firstterm>DMLex Modules</firstterm> are referenced
            from those modules.</para>
        </listitem>
      </orderedlist>



      <warning>
        <para>NVDL is not capable of discerning Schemtaron Warnings from Schematron Errors.
          Therefore all Schematron Warnings will be reported as Errors when initiating the
          validation from the NVDL schema. Also most of the existing Schematron implementations are
          not capable of discerning Warnings from Errors, thus implementers are encouraged to re-use
          the provided Schematron schemas in custom made validation services that can make this
          distinction. Currently, the Warning/Error distinction is only important when evaluating
          adherence to Processing Requirements for [ELABORATE].</para>
      </warning>

    </para>
     -->
    <!--   <para>[Relax NG schemas of <firstterm>DMLex Core and Modules</firstterm> are provided. Although the Relax NG schemas are intended as normative validation artifacts, the XML Schema 1.0 [add normative reference] schemas and Schematron [add normative reference] schemas have precedence in case of conflicting validation results.]
      [This is only relevant if Relax NG is provided.]</para> -->
    <!--  <xi:include href="core/tree.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/> -->
    <!--  LEXIDMA TC may decide to include the schema listings
    <xi:include href="core/catalog.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>

    <xi:include href="core/schema.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
 -->
    <!--  language for potential inclusion of support schemas such as the xml namespace schema
    <section>
      <title>Support Schemas</title>
      <para>Third party support schemas that are normatively referenced from this specification or
        from the machine readable artifacts that are a part of this multipart product are distributed
        along with the <firstterm>DMLex-defined</firstterm> schemas in a subfolder named
        <code>informativeCopiesOf3rdPartySchemas</code> and further subdivided in folders according to the
      owner/maintainer of the schema.</para>
      <warning>
      <para>Schema copies in this sub-folder are provided solely for implementers convenience and are NOT a part of the OASIS multipart product.
        These schemas belong to their respective owners and their use is governed by their owners' respective IPR policies.
        The support schemas are organized in folders per owner/maintainer.
        It is the implementer's sole responsibility to ensure that their local copies of all schemas are the appropriate up to date versions.</para></warning>

        <para>Currently the only included third party support schema is
          <ulink url="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</ulink> [<ulink url="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</ulink>] at <ulink
            url="&this-loc;/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd"
            >&this-loc;/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd</ulink> in this distribution.</para>
    </section> -->
  </appendix>
  <appendix role="normative | informative" id="SecurityPrivacy">
    <title>Security and privacy considerations</title>
    <note>
      <para>OASIS strongly recommends that Technical Committees consider issues that might affect
        safety, security, privacy, and/or data protection in implementations of their work products
        and document these for implementers and adopters. For some purposes, you may find it
        required, e.g. if you apply for IANA registration.</para>
      <para>While it may not be immediately obvious how your work product might make systems
        vulnerable to attack, most work products, because they involve communications between
        systems, message formats, or system settings, open potential channels for exploit. For
        example, IETF [<link linkend="rfc3552">RFC 3552</link>] lists “eavesdropping, replay,
        message insertion, deletion, modification, and man-in-the-middle” as well as potential
        denial of service attacks as threats that must be considered and, if appropriate, addressed
        in IETF RFCs.</para>
      <para>In addition to considering and describing foreseeable risks, this section should include
        guidance on how implementers and adopters can protect against these risks.</para>
      <para>We encourage editors and TC members concerned with this subject to read Guidelines for
        Writing RFC Text on Security Considerations, IETF [<link linkend="rfc3552">RFC 3552</link>],
        for more information.</para>
    </note>
  </appendix>
  <appendix role="informative" id="specChangeTracking">
    <title>Specification Change Tracking</title>
    <para>This appendix will contain tracked changes after the csprd01 phase will have been
      reached.</para>
    <!-- 
    <xi:include href="ReviewChangeTracking/ReviewChangeTrack.xml"
      xmlns:xi="http://www.w3.org/2001/XInclude"/>
       -->
  </appendix>
  <appendix role="informative" id="acknowledgements">
    <title>Acknowledgements</title>
    <para>The following individuals have participated in the creation of this specification and are
      gratefully acknowledged:</para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Erjavec, Tomaž - JSI </para>
      </listitem>
      <listitem>
        <para>Filip, David - TCD, ADAPT Centre </para>
      </listitem>
      <listitem>
        <para>Jakubíček, Miloš - Lexical Computing </para>
      </listitem>
      <listitem>
        <para>Kernerman, Ilan - K Dictionaries </para>
      </listitem>
      <listitem>
        <para>Kosem, Iztok - JSI </para>
      </listitem>
      <listitem>
        <para>Krek, Simon - JSI </para>
      </listitem>
      <listitem>
        <para>McCrae, John - National University of Ireland Galway </para>
      </listitem>
      <listitem>
        <para>Měchura, Milan - JSI </para>
      </listitem>
    </itemizedlist>
  </appendix>
</article>