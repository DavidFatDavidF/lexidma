<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
    xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
    datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns:dmlex="http://docs.oasis-open.org/lexidma/ns/dmlex-1.0">
    <a:documentation>RelaxNG XML schema for OASIS DMLex lexicographic resources: Core
        module.</a:documentation>

    <start>
        <ref name="LexicographicResource"/>
    </start>

    <a:documentation>Root element with a series of Entry elements, possibly followed by a mixture
        support elements (Tag, Source, and, if used, elements from the Linking
        Module.</a:documentation>
    <define name="LexicographicResource">
        <element name="dmlex:LexicographicResource">
            <ref name="LexicographicResource.attributes"/>
            <oneOrMore>
                <ref name="Entry"/>
            </oneOrMore>
            <zeroOrMore>
                <choice>
                    <ref name="LexicographicResource.linking.elements"/>
                    <ref name="Tag"/>
                    <ref name="Source"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <a:documentation>Entry element containing the Headword element, possibly followed by a mixture
        of support elements, and then Senses.</a:documentation>
    <define name="Entry">
        <element name="dmlex:Entry">
            <ref name="Entry.attributes"/>
            <ref name="Headword"/>
            <!-- ET: Can the following be present in any order and in any number? -->
            <zeroOrMore>
                <choice>
                    <ref name="PartOfSpeech"/>
                    <ref name="Label"/>
                    <ref name="Pronunciation"/>
                    <ref name="InflectedForm"/>
                </choice>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="Sense"/>
            </zeroOrMore>
        </element>
    </define>

    <!-- A headword object -->
    <define name="Headword">
        <element name="dmlex:headword">
            <choice>
                <data type="token"/>
                <ref name="Headword.inline.content"/>
            </choice>
        </element>
    </define>

    <!-- A Pronunciation object -->
    <define name="Pronunciation">
        <element name="dmlex:Pronunciation">
            <!-- Either one, or the other, or both -->
            <choice>
                <group>
                    <ref name="transcription"/>
                    <optional>
                        <ref name="soundFile"/>
                    </optional>
                </group>
                <group>
                    <optional>
                        <ref name="transcription"/>
                    </optional>
                    <ref name="soundFile"/>
                </group>
            </choice>
            <zeroOrMore>
                <ref name="Label"/>
            </zeroOrMore>
        </element>
    </define>

    <!-- A InflectedForm object -->
    <define name="InflectedForm">
        <element name="dmlex:InflectedForm">
            <ref name="tag"/>
            <ref name="text"/>
            <!-- ET: Can the following be present in any order and in any number? -->
            <zeroOrMore>
                <interleave>
                    <ref name="Label"/>
                    <ref name="Pronunciation"/>
                </interleave>
            </zeroOrMore>
        </element>
    </define>

    <!-- A Sense object -->
    <define name="Sense">
        <element name="dmlex:Sense">
            <!-- Contrary to the current specs! -->
            <optional>
                <ref name="id"/>
            </optional>
            <choice>
                <group>
                    <optional>
                        <element name="dmlex:indicator">
                            <data type="token"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="dmlex:definition">
                            <data type="token"/>
                        </element>
                    </optional>
                </group>
                <ref name="Sense.bilingual.elements"/>
            </choice>
            <!-- ET: Can the following be present in any order and in any number? -->
            <zeroOrMore>
                <choice>
                    <ref name="Label"/>
                    <ref name="Example"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <!-- An Example object -->
    <define name="Example">
        <element name="dmlex:Example">
            <optional>
                <attribute name="source">
                    <data type="string"/>
                </attribute>
            </optional>
            <optional>
                <ref name="soundFile"/>
            </optional>
            <optional>
                <element name="dmlex:sourceElaboration">
                    <data type="string"/>
                </element>
            </optional>
            <ref name="Example.content"/>
        </element>
    </define>

    <a:documentation>Pure text, except if Inline module is used.</a:documentation>
    <define name="Example.content">
        <element name="dmlex:text">
            <choice>
                <data type="token"/>
                <ref name="Example.inline.content"/>
            </choice>
        </element>
    </define>

    <a:documentation>The Tag object</a:documentation>
    <define name="Tag">
        <element name="dmlex:Tag">
            <ref name="Tag.attributes"/>
            <optional>
                <ref name="description"/>
            </optional>
            <optional>
                <ref name="TagMapping"/>
            </optional>
        </element>
    </define>

    <a:documentation>The TagMapping object</a:documentation>
    <define name="TagMapping">
        <element name="dmlex:tagMapping">
            <attribute name="sameAs">
                <data type="anyURI"/>
            </attribute>
            <empty/>
        </element>
    </define>

    <a:documentation>The Source object. Currently no IDREF linking with source
        property.</a:documentation>
    <define name="Source">
        <element name="dmlex:Source">
            <ref name="id"/>
            <optional>
                <attribute name="url">
                    <data type="anyURI"/>
                </attribute>
            </optional>
            <optional>
                <ref name="description"/>
            </optional>
        </element>
    </define>

    <a:documentation>A description property</a:documentation>
    <define name="description">
        <element name="dmlex:description">
            <data type="token"/>
        </element>
    </define>

    <a:documentation>A Label object</a:documentation>
    <define name="Label">
        <element name="dmlex:Label">
            <ref name="tag"/>
            <empty/>
        </element>
    </define>

    <a:documentation>A Part of speech object</a:documentation>
    <define name="PartOfSpeech">
        <element name="dmlex:PartOfSpeech">
            <ref name="tag"/>
            <empty/>
        </element>
    </define>

    <a:documentation>A transcription object</a:documentation>
    <define name="transcription">
        <element name="dmlex:transcription">
            <data type="string"/>
        </element>
    </define>

    <a:documentation>The description property</a:documentation>
    <define name="desciption">
        <element name="dmlex:description">
            <data type="string"/>
        </element>
    </define>

    <a:documentation>A soundFile property</a:documentation>
    <define name="soundFile">
        <attribute name="soundFile">
            <data type="anyURI"/>
        </attribute>
    </define>

    <!-- The tag property -->
    <define name="tag">
        <attribute name="tag">
            <data type="token"/>
        </attribute>
    </define>

    <!-- Generally useful definitions -->

    <!-- id property -->
    <define name="id">
        <attribute name="xml:id">
            <data type="ID"/>
        </attribute>
    </define>

    <!-- text property -->
    <define name="text">
        <element name="dmlex:text">
            <data type="token"/>
        </element>
    </define>

    <a:documentation>Attributes of the Lexicographic resource object. Note that ID, contrary to
        current specs, is one of the attributes.</a:documentation>
    <define name="LexicographicResource.attributes">
        <!-- Contrary to the current specs! -->
        <optional>
            <ref name="id"/>
        </optional>
        <attribute name="xml:lang">
            <data type="language"/>
        </attribute>
        <optional>
            <attribute name="transcriptionScheme">
                <data type="language"/>
            </attribute>
        </optional>
    </define>
    
    <a:documentation>Attributes of the Entry object. Note that ID, contrary to
        current specs, is one of the attributes.</a:documentation>
    <define name="Entry.attributes">
        <!-- Contrary to the current specs! -->
        <optional>
            <ref name="id"/>
        </optional>
        <optional>
            <attribute name="homographNumber">
                <data type="integer"/>
            </attribute>
        </optional>
    </define>
    
    <a:documentation>Attributes of the Tag object.</a:documentation>
    <define name="Tag.attributes">
        <ref name="tag"/>
        <optional>
            <attribute name="subtype">
                <choice>
                    <value>partOfSpeech</value>
                    <value>inflectedForm</value>
                    <value>label</value>
                </choice>
            </attribute>
        </optional>
        <optional>
            <attribute name="partOfSpeech">
                <data type="Name"/>
            </attribute>
        </optional>
    </define>

    <a:documentation>Dummy definitions implemented in the additional modules</a:documentation>
    
    <define name="LexicographicResource.linking.elements">
        <notAllowed/>
    </define>

    <define name="Headword.inline.content">
        <notAllowed/>
    </define>
    <define name="Example.inline.content">
        <notAllowed/>
    </define>
    <!-- This doesn't work, as core Sense has no attributes -->
    <!--define name="Sense.linking.attributes">
        <notAllowed/>
    </define-->

    <define name="Sense.bilingual.elements">
        <notAllowed/>
    </define>

    <define name="Example.bilingual.elements">
        <notAllowed/>
    </define>

</grammar>
